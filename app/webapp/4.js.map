{"version":3,"sources":["webpack:///./src/page/job/routerJob.jsx","webpack:///./src/util/HttpService.jsx","webpack:///./src/service/JobService.jsx","webpack:///./src/page/job/JobList.jsx","webpack:///./src/page/job/JobInfo.jsx","webpack:///./src/page/job/jobExecInfo.jsx","webpack:///./src/page/job/JobLog.jsx"],"names":["__webpack_require__","_reactRouterDom","RouterJob","React","Component","_react2","default","createElement","Switch","Route","path","component","JobList","JobInfo","JobExecInfo","JobLog","Redirect","exact","from","to","_LogcalStorge","localStorge","LocalStorge","HttpService","window","getServerUrl","url","param","undefined","getStorage","location","href","Promise","resolve","reject","fullUrl","getBaseUrl","opts","method","headers","Access-Control-Allow-Origin","credentials","JSON","stringify","body","fetch","then","response","json","catch","error","_HttpService","JobService","listParam","post","page","id","job_execute_id","JobId","Param","_job","Search","_input2","props","_classCallCheck","this","_this","_possibleConstructorReturn","__proto__","Object","getPrototypeOf","call","handleOk","e","setState","visible","pageNumd","handleCancel","state","list","pageNum","perPage","listType","searchKeyword","dictionaryList","searchDictionary","paramValue","totald","loadJobList","_this2","keyword","getList","data","resultRows","total","resultTotal","errMsg","_this3","name","target","value","trim","_defineProperty","_this4","status","_this5","alert","confirm","delJob","_this6","executeJob","pauseJob","loadModelData","_this7","perPaged","job_id","getJobExecuteByJobId","loading","message","_this8","_this9","columns","title","dataIndex","key","render","text","record","index","Link","job_status","_divider2","type","onClick","deleteJob","stopJob","openModelClick","dictionaryColumns","_card2","_tooltip2","style","width","marginBottom","placeholder","enterButton","onSearch","_button2","float","marginRight","_table2","dataSource","pagination","_pagination2","current","showTotal","onChange","onPageNumChange","_modal2","onOk","onCancel","ref","size","bordered","onPageNumdChange","FormItem","_form2","Item","Option","_select2","corns","seconds","minutes","hours","day","month","week","year","substring","length","jobCron","form","setFieldsValue","handleOktwo","visibletwo","mkey1","mvalue1","mkey2","mvalue2","mkey3","mvalue3","handleCanceltwo","confirmDirty","match","params","selectTransferList","selectList","handleSubmit","bind","handleConfirmBlur","sl","children2","children3","getAllTransfer","console","log","resultCode","rlist","i","push","transfer_id","transfer_name","getJobInfo","preventDefault","validateFieldsAndScroll","err","values","save","errorTips","vl","arr","split","getFieldDecorator","formItemLayout","labelCol","xs","span","sm","wrapperCol","onSubmit","_row2","_col2","_extends","label","rules","required","whitespace","pan","minWidth","allowClear","onSelectChange","openModelClickTwo","offset","htmlType","marginLeft","onValueChangetwo","padding","create","_ref","jobName","jobGroup","begin_time","end_time","userId","tick","num","loadlogList","score","interval","setInterval","clearInterval","getJobExecutePorcess","parseFloat","count","Math","round","_reactCircle2","progress","lineWidth"],"mappings":"wYAAAA,EAAA,IACAC,EAAAD,EAAA,SAEAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,6DAEME,grBAAkBC,UAAMC,+CAEtB,OACIC,EAAAC,QAAAC,cAACN,EAAAO,OAAD,KACKH,EAAAC,QAAAC,cAACN,EAAAQ,MAAD,CAAOC,KAAK,eAAeC,UAAWC,YACtCP,EAAAC,QAAAC,cAACN,EAAAQ,MAAD,CAAOC,KAAK,mBAAmBC,UAAWE,YAC1CR,EAAAC,QAAAC,cAACN,EAAAQ,MAAD,CAAOC,KAAK,uBAAuBC,UAAWG,YAC9CT,EAAAC,QAAAC,cAACN,EAAAQ,MAAD,CAAOC,KAAK,kBAAkBC,UAAWI,YACzCV,EAAAC,QAAAC,cAACN,EAAAe,SAAD,CAAUC,OAAA,EAAMC,KAAK,OAAOC,GAAG,qCAKjCjB,+VCrBfF,EAAA,KACA,MAAAoB,EAAApB,EAAA,KACA,IAAMqB,EAAc,uCAAIC,QACHC,gNAKb,OADQC,OAAOC,4CAKPC,EAAIC,GACZ,GAAIC,MAAWP,EAAYQ,WAAW,aAAoB,gCAALH,GAA4C,iCAALA,GAA0C,IAAIL,EAAYQ,WAAW,aAAqB,gCAALH,GAA4C,iCAALA,EAEpN,OADAF,OAAOM,SAASC,KAAK,SACb,IAAIC,QAAQ,SAACC,EAASC,MAE9B,IAAMC,EAAUZ,EAAYa,aAAeV,EACvCW,EAAO,CACPC,OAAQ,OACRC,QAAS,CACLC,8BAA+B,IAC/BC,YAAaC,KAAKC,UAAUtB,EAAYQ,WAAW,aAAe,KAEtEe,KAAMjB,GAGV,OAAOkB,MAAMV,EAASE,GAAMS,KAAK,SAACC,GAE1B,OAAOA,EAASC,SACjBC,MAAM,SAACC,GACN,OAAOA,EAAMF,4BA5BZzB,gVCIrB4B,EAAAnD,EAAA,6CAEMoD,0KAEMC,GAEJ,OAAO9B,UAAY+B,KAAK,yBAAyBZ,KAAKC,UAAUU,iDAG/CE,GACjB,OAAOhC,UAAY+B,KAAK,2CAA2CZ,KAAKC,UAAUY,iDAEjEC,GACjB,OAAOjC,UAAY+B,KAAK,2CAA2CZ,KAAKC,UAAU,CAACc,eAAeD,wCAG3FE,GACP,OAAOnC,UAAY+B,KAAK,0BAA0BZ,KAAKC,UAAU,CAACa,GAAGE,kCAGpEC,GACD,MAAa,QAAVA,EAAMH,GACEjC,UAAY+B,KAAK,yBAAyBZ,KAAKC,UAAUgB,IAEzDpC,UAAY+B,KAAK,yBAAyBZ,KAAKC,UAAUgB,mCAIjEH,GACH,OAAOjC,UAAY+B,KAAK,yBAAyBZ,KAAKC,UAAU,CAACa,GAAGA,wCAG7DA,GACP,OAAOjC,UAAY+B,KAAK,0BAA0BZ,KAAKC,UAAU,CAACa,GAAGA,sCAGhEA,GACL,OAAOjC,UAAY+B,KAAK,wBAAwBZ,KAAKC,UAAU,CAACa,GAAGA,uCAG7DA,GACN,OAAOjC,UAAY+B,KAAK,yBAAyBZ,KAAKC,UAAU,CAACa,GAAGA,8CAGpE,OAAOjC,UAAY+B,KAAK,kCAAkC,yBAInDF,idCvDf,QAAApD,EAAA,IACAC,EAAAD,EAAA,SACAA,EAAA,UACAA,EAAA,yDAGoB,MADpBA,EAAA,MACwBsB,SAAxB,IACMsC,EAAO,IAAIR,UACXS,EAASC,EAAAxD,QAAMuD,OAEfjD,cACF,SAAAA,EAAYmD,gGAAMC,CAAAC,KAAArD,GAAA,IAAAsD,mKAAAC,CAAAF,MAAArD,EAAAwD,WAAAC,OAAAC,eAAA1D,IAAA2D,KAAAN,KACRF,IADQ,OAAAG,EA4HlBM,SAAW,SAACC,GACRP,EAAKQ,SAAS,CAACC,SAAS,EAAMC,SAAS,KA7HzBV,EAgIlBW,aAAe,SAACJ,GACZP,EAAKQ,SAAS,CAACC,SAAS,KA/HxBT,EAAKY,MAAQ,CACTC,KAAkB,GAClBC,QAAiB,EACjBC,QAAiB,GACjBC,SAAiB,OACjBC,cAAc,GACdC,eAAe,GACfR,SAAU,EACVS,iBAAiB,GACjBC,WAAW,GACXC,OAAO,GAZGrB,qUADA/D,UAAMC,0DAiBnB6D,KAAKuB,oDAEG,IAAAC,EAAAxB,KACLZ,EAAY,GAChBA,EAAU2B,QAAWf,KAAKa,MAAME,QAChC3B,EAAU4B,QAAWhB,KAAKa,MAAMG,QAEL,WAAxBhB,KAAKa,MAAMI,WACV7B,EAAUqC,QAAazB,KAAKa,MAAMK,eAEtCvB,EAAK+B,QAAQtC,GAAWP,KAAK,SAAAC,GACzB0C,EAAKf,SAAS,CAACK,KAAKhC,EAAS6C,KAAKC,WAAWC,MAAM/C,EAAS6C,KAAKG,eAClE,SAAAC,GACCP,EAAKf,SAAS,CACVK,KAAO,+CAMHC,GAAQ,IAAAiB,EAAAhC,KACpBA,KAAKS,SAAS,CACVM,QAAUA,GACX,WACCiB,EAAKT,sDAICf,GACV,IAAIyB,EAAUzB,EAAE0B,OAAOD,KACnBE,EAAU3B,EAAE0B,OAAOC,MAAMC,OAC7BpC,KAAKS,+HAAL4B,CAAA,GACKJ,EAAQE,qCAIPjB,GAAc,IAAAoB,EAAAtC,KAChBiB,EAA6B,KAAlBC,EAAuB,OAAS,SAC/ClB,KAAKS,SAAS,CACVQ,SAASA,EACTF,QAAkB,EAClBG,cAAkBA,GACnB,WACCoB,EAAKf,kDAGHhC,EAAGgD,GAAO,IAAAC,EAAAxC,KAChB,GAAW,KAARuC,EAEC,OADAE,MAAM,eACC,EAERC,QAAQ,WACP/C,EAAKgD,OAAOpD,GAAIV,KAAK,SAAAC,GACjB2D,MAAM,QACND,EAAKjB,eACN,SAAAQ,GACCU,MAAM,0CAKVlD,EAAGgD,GAAO,IAAAK,EAAA5C,KACH,GAARuC,EACC5C,EAAKkD,WAAWtD,GAAIV,KAAK,SAAAC,GACrB2D,MAAM,QACNG,EAAKrB,eACN,SAAAQ,GACCU,MAAM,UAGV9C,EAAKmD,SAASvD,GAAIV,KAAK,SAAAC,GACnB2D,MAAM,QACNG,EAAKrB,eACN,SAAAQ,GACCU,MAAM,iDAMLlD,GACbS,KAAKS,SAAS,CAAEC,SAAS,EAAKS,eAAe,GAAGE,WAAW9B,EAAG+B,OAAO,GAAG,WACtEtB,KAAK+C,cAAcxD,2CAIR7B,GAAM,IAAAsF,EAAAhD,KACfV,EAAO,GACXA,EAAKqB,SAAYX,KAAKa,MAAMF,SAC5BrB,EAAK2D,SAAY,GACjB3D,EAAK8B,iBAAiBpB,KAAKa,MAAMO,iBACjC9B,EAAK4D,OAAOxF,EACRiC,EAAKwD,qBAAqB7D,GAAMT,KAAK,SAAAC,GAChCkE,EAAKvC,SAAS,CAACU,eAAerC,EAAS6C,KAAKC,WAAWN,OAAOxC,EAAS6C,KAAKG,gBAC9E9C,MAAM,SAAAC,GACL+D,EAAKvC,SAAS,CAAC2C,SAAQ,IACvBC,QAAQpE,MAAMA,8CAIL0B,GAAS,IAAA2C,EAAAtD,KACtBA,KAAKS,SAAS,CACVE,SAAWA,GACZ,WACC2C,EAAKP,cAAcO,EAAKzC,MAAMQ,+CAY9B,IAAAkC,EAAAvD,KAKEwD,GADaxD,KAAKa,MAAMC,KACd,CAAC,CACb2C,MAAO,OACPC,UAAW,KACXC,IAAK,MACL,CACAF,MAAO,WACPC,UAAW,WACXC,IAAK,WACLC,OAAQ,SAASC,EAAMC,EAAQC,GAC5B,OAAO3H,EAAAC,QAAAC,cAACN,EAAAgI,KAAD,CAAM9G,GAAA,eAAoB4G,EAAOvE,IAAQsE,KAElD,CACDJ,MAAO,OACPC,UAAW,YACXC,IAAK,aAEL,CACAF,MAAM,QACNC,UAAU,WACVC,IAAI,YAER,CACIF,MAAO,OACPC,UAAW,eACXC,IAAK,gBAGT,CACIF,MAAO,OACPC,UAAW,aACXC,IAAK,aACLC,OAAQ,SAACC,EAAMC,GAAP,OACJ1H,EAAAC,QAAAC,cAAA,YACuB,KAAnBwH,EAAOG,WAAgB,KAAK,QAGpC,CACAR,MAAO,KACPC,UAAW,KACXE,OAAQ,SAACC,EAAMC,GAAP,OACJ1H,EAAAC,QAAAC,cAAA,YACEF,EAAAC,QAAAC,cAACN,EAAAgI,KAAD,CAAM9G,GAAA,gBAAqB4G,EAAOvE,IAAlC,MACAnD,EAAAC,QAAAC,cAAA4H,EAAA7H,QAAA,CAAS8H,KAAK,aACd/H,EAAAC,QAAAC,cAAA,KAAG8H,QAAS,kBAAIb,EAAKc,UAAL,GAAkBP,EAAOvE,GAAzB,GAAiCuE,EAAOG,aAAenG,KAAK,gBAA5E,MACA1B,EAAAC,QAAAC,cAAA4H,EAAA7H,QAAA,CAAS8H,KAAK,aACd/H,EAAAC,QAAAC,cAAA,KAAG8H,QAAS,kBAAIb,EAAKe,QAAL,GAAgBR,EAAOvE,GAAvB,GAA+BuE,EAAOG,aAAenG,KAAK,gBAAmC,KAAnBgG,EAAOG,WAAgB,KAAK,MACtH7H,EAAAC,QAAAC,cAAA4H,EAAA7H,QAAA,CAAS8H,KAAK,aACd/H,EAAAC,QAAAC,cAAA,KAAG8H,QAAS,SAAA5D,GAAA,OAAG+C,EAAKgB,eAAL,GAAuBT,EAAOvE,KAAQzB,KAAK,gBAA1D,eAIF0G,EAAkB,CAAC,CACnBf,MAAO,OACPC,UAAW,KACXC,IAAK,MAKN,CACCF,MAAO,OACPC,UAAW,aACXC,IAAK,cAEN,CACCF,MAAO,OACPC,UAAW,WACXC,IAAK,YACN,CACCF,MAAO,OACPC,UAAW,cACXC,IAAK,eACN,CACCF,MAAO,OACPC,UAAW,qBACXC,IAAK,sBACN,CACCF,MAAO,OACPC,UAAW,aACXC,IAAK,aACLC,OAAQ,SAACC,EAAMC,GAAP,OACA1H,EAAAC,QAAAC,cAAA,YACqB,KAApBwH,EAAOG,WAAmB,KAAM,QAG1C,CACCR,MAAO,KACPC,UAAW,KACXE,OAAQ,SAACC,EAAMC,GAAP,OACJ1H,EAAAC,QAAAC,cAAA,YACAF,EAAAC,QAAAC,cAACN,EAAAgI,KAAD,CAAM9G,GAAA,eAAmB4G,EAAOvE,IAAhC,UAIZ,OACInD,EAAAC,QAAAC,cAAA,OAAKiD,GAAG,gBACRnD,EAAAC,QAAAC,cAAAmI,EAAApI,QAAA,CAAMoH,MAAM,QACRrH,EAAAC,QAAAC,cAAAoI,EAAArI,QAAA,KACKD,EAAAC,QAAAC,cAACsD,EAAD,CACG+E,MAAO,CAAEC,MAAO,IAAIC,aAAa,QACjCC,YAAY,SACZC,YAAY,KACZC,SAAU,SAAA7C,GAAA,OAASoB,EAAKyB,SAAS7C,OAGzC/F,EAAAC,QAAAC,cAAAoI,EAAArI,QAAA,KACID,EAAAC,QAAAC,cAAA2I,EAAA5I,QAAA,CAAQyB,KAAK,qBAAqB6G,MAAO,CAAEO,MAAO,QAASC,YAAa,QAAUhB,KAAK,WAAvF,SAGJ/H,EAAAC,QAAAC,cAAA8I,EAAA/I,QAAA,CAAOgJ,WAAYrF,KAAKa,MAAMC,KAAM0C,QAASA,EAAU8B,YAAY,IACnElJ,EAAAC,QAAAC,cAACiJ,EAAAlJ,QAAD,CAAYmJ,QAASxF,KAAKa,MAAME,QACxBc,MAAO7B,KAAKa,MAAMgB,MAAQ4D,UAAW,SAAA5D,GAAA,WAAc0B,EAAK1C,MAAMgB,MAAzB,KACrC6D,SAAU,SAAC3E,GAAD,OAAawC,EAAKoC,gBAAgB5E,OAExD3E,EAAAC,QAAAC,cAAA,WACIF,EAAAC,QAAAC,cAAAsJ,EAAAvJ,QAAA,CAAQoH,MAAM,SAASmB,MAAM,QAAQlE,QAASV,KAAKa,MAAMH,QAAUmF,KAAM7F,KAAKO,SAAUuF,SAAU9F,KAAKY,cAM/FxE,EAAAC,QAAAC,cAAA8I,EAAA/I,QAAA,CAAO0J,IAAI,UAAWvC,QAASgB,EAC/Ba,WAAYrF,KAAKa,MAAMM,eAAgB6E,KAAK,QAAQC,UAAA,EAAUX,YAAY,IAC1ElJ,EAAAC,QAAAC,cAACiJ,EAAAlJ,QAAD,CAAYmJ,QAASxF,KAAKa,MAAMF,SAChCkB,MAAO7B,KAAKa,MAAMS,OAASmE,UAAW,SAAA5D,GAAA,gBACtC6D,SAAU,SAAC3E,GAAD,OAAawC,EAAK2C,iBAAiBnF,4BAQtDpE,qoBCzRf,QAAAZ,EAAA,QAEAA,EAAA,iLAEA,IAAM4D,EAAO,MADb5D,EAAA,MACiBoD,SACX/B,EAAc,IAAIC,UAClB8I,EAAWC,EAAA/J,QAAKgK,KAChBC,EAASC,EAAAlK,QAAOiK,OAEhB1J,cACJ,SAAAA,EAAYkD,gGAAOC,CAAAC,KAAApD,GAAA,IAAAqD,mKAAAC,CAAAF,MAAApD,EAAAuD,WAAAC,OAAAC,eAAAzD,IAAA0D,KAAAN,KACXF,IADW,OAAAG,EA+GnBM,SAAW,SAACC,GACV,IAAIgG,EAAMvG,EAAKY,MAAM4F,QAAQ,IAAIxG,EAAKY,MAAM6F,QAAQ,IAAIzG,EAAKY,MAAM8F,MAAM,IAAI1G,EAAKY,MAAM+F,IAAI,IAAI3G,EAAKY,MAAMgG,MAAM,IAAI5G,EAAKY,MAAMiG,KAAK,IAAI7G,EAAKY,MAAMkG,KACzH,IAAxB9G,EAAKY,MAAMkG,KAAK3E,SACjBoE,EAAMA,EAAMQ,UAAU,EAAER,EAAMS,OAAO,IAEvChH,EAAKQ,SAAS,CAACC,SAAS,EAAMwG,QAAQV,EAAOC,QAAQ,GAAGC,QAAQ,GAAGC,MAAM,GAAGC,IAAI,GAAGC,MAAM,GAAIC,KAAK,GAAGC,KAAK,KAC1G9G,EAAKH,MAAMqH,KAAKC,eAAhB/E,EAAA,GAAkC,WAAamE,KArH9BvG,EAwHnBW,aAAe,SAACJ,GACdP,EAAKQ,SAAS,CAACC,SAAS,EAAO+F,QAAQ,GAAGC,QAAQ,GAAGC,MAAM,GAAGC,IAAI,GAAGC,MAAM,GAAIC,KAAK,GAAGC,KAAK,MAzH3E9G,EAkIpBoH,YAAc,SAAC7G,GAEbP,EAAKQ,SAAS,CAAC6G,YAAY,EAAOC,MAAM,eAAeC,QAAQ,GAAGC,MAAM,cAAcC,QAAQ,GAAGC,MAAM,YAAYC,QAAQ,KAC3H3H,EAAKH,MAAMqH,KAAKC,eAAhB/E,EAAA,GAAkC,YAAc,IAAIpC,EAAKY,MAAM0G,MAAM,KAAKtH,EAAKY,MAAM2G,QAAQ,KAAKvH,EAAKY,MAAM4G,MAAM,KAAKxH,EAAKY,MAAM6G,QAAQ,KAC3IzH,EAAKY,MAAM8G,MAAM,KAAK1H,EAAKY,MAAM+G,QAAQ,QAtIvB3H,EAyIpB4H,gBAAkB,SAACrH,GACjBP,EAAKQ,SAAS,CAAC6G,YAAY,EAAOC,MAAM,eAAeC,QAAQ,GAAGC,MAAM,cAAcC,QAAQ,GAAGC,MAAM,YAAYC,QAAQ,MAxI1H3H,EAAKY,MAAQ,CACXiH,cAAc,EACdvI,GAAIU,EAAKH,MAAMiI,MAAMC,OAAOzI,GAC5BmB,SAAQ,EACR4G,YAAW,EACXb,QAAQ,GACRC,QAAQ,GACRC,MAAM,GACNC,IAAI,GACJC,MAAM,GACNC,KAAK,GACLC,KAAK,GACLkB,mBAAmB,GACnBC,WAAW,GACXX,MAAM,eAAqBC,QAAQ,GACnCC,MAAM,cAAoBC,QAAQ,GAClCC,MAAM,YAAkBC,QAAQ,IAElC3H,EAAKkI,aAAelI,EAAKkI,aAAaC,KAAlBnI,GACpBA,EAAKoI,kBAAoBpI,EAAKoI,kBAAkBD,KAAvBnI,GArBRA,qUADC/D,UAAMC,0DA0BN,IAAAqF,EAAAxB,KACVsI,EAAG,CAAC,CAAC/I,GAAG,EAAE0C,KAAK,MAAM,CAAC1C,GAAG,EAAE0C,KAAK,OAC9BsG,EAAU,GAAGC,EAAU,GAC7B7I,EAAK8I,iBAAiB5J,KAAK,SAAAC,GAEzB,GADA4J,QAAQC,IAAI7J,GACY,QAArBA,EAAS8J,WAAmB,CAE7B,IADA,IAAIC,EAAM/J,EAAS6C,KACVmH,EAAI,EAAGA,EAAID,EAAM5B,OAAQ6B,IAC9BP,EAAUQ,KAAK3M,EAAAC,QAAAC,cAACgK,EAAD,CAAQ3C,IAAKkF,EAAMC,GAAGE,YAAa7G,MAAO0G,EAAMC,GAAGE,aAAcH,EAAMC,GAAGG,gBAE7FzH,EAAKf,SAAS,CAACwH,mBAAmBM,OAGxC,IAAK,IAAIO,EAAI,EAAGA,EAAIR,EAAGrB,OAAQ6B,IAC3BN,EAAUO,KAAK3M,EAAAC,QAAAC,cAACgK,EAAD,CAAQ3C,IAAK2E,EAAGQ,GAAGvJ,GAAI4C,MAAOmG,EAAGQ,GAAGvJ,IAAK+I,EAAGQ,GAAG7G,OAElEjC,KAAKS,SAAS,CAACyH,WAAWM,IAEtB,MAAMxI,KAAKa,MAAMtB,IAAM,IAAIS,KAAKa,MAAMtB,IAAO,QAAQS,KAAKa,MAAMtB,IAChEI,EAAKuJ,WAAWlJ,KAAKa,MAAMtB,IAAIV,KAAK,SAAAC,GAC9B0C,EAAKf,SAAS3B,EAAS6C,MACvBH,EAAK1B,MAAMqH,KAAKC,eAAetI,EAAS6C,OAEzC,SAAAI,GACCP,EAAKf,SAAS,4CAQdD,GACZ,IAAIyB,EAAOzB,EAAE0B,OAAOD,KAClBE,EAAQ3B,EAAE0B,OAAOC,MAAMC,OAEzBpC,KAAKF,MAAMqH,KAAKC,eAAhB/E,EAAA,GAAkCJ,EAAOE,6CAI3B3B,GAChB,IAAIyB,EAAOzB,EAAE0B,OAAOD,KAClBE,EAAQ3B,EAAE0B,OAAOC,MAAMC,OACvBpC,KAAKS,SAAL4B,EAAA,GAAgBJ,EAAME,2CAITF,EAAKE,GAClBnC,KAAKS,SAAL4B,EAAA,GAAgBJ,EAAME,IACtBnC,KAAKF,MAAMqH,KAAKC,eAAhB/E,EAAA,GAAiCJ,EAAME,yCAG5B3B,GAAG,IAAAwB,EAAAhC,KACdQ,EAAE2I,iBACFnJ,KAAKF,MAAMqH,KAAKiC,wBAAwB,SAACC,EAAKC,GAC5CZ,QAAQC,IAAIW,GACPD,IACHC,EAAO/J,GAAKyC,EAAKnB,MAAMtB,GACvBI,EAAK4J,KAAKD,GAAQzK,KAAK,SAAAC,GACrB2D,MAAM,QACNlF,OAAOM,SAASC,KAAO,SACtB,SAAAiE,GACDC,EAAKvB,SAAS,IACdrD,EAAYoM,UAAUzH,kDAMZvB,GAChB,IAAM2B,EAAQ3B,EAAE0B,OAAOC,MACvBnC,KAAKS,SAAS,CAAEqH,aAAc9H,KAAKa,MAAMiH,gBAAkB3F,2CAG/C3B,GACb,IAAIiJ,EAAGjJ,EAAE0B,OAAOC,MACZsE,EAAQ,GAAGC,EAAQ,GAAGC,EAAM,GAAGC,EAAI,GAAIC,EAAM,GAAIC,EAAK,GAAIC,EAAK,GACnE,GAAO,IAAJ0C,GAAc,MAAJA,EAAS,CACnB,IAAIC,EAAKD,EAAGE,MAAM,KAClBlD,EAAQiD,EAAI,GAAGhD,EAAQgD,EAAI,GAAI/C,EAAM+C,EAAI,GAAI9C,EAAI8C,EAAI,GACrD7C,EAAM6C,EAAI,GAAG5C,EAAK4C,EAAI,GAAI3C,EAAK2C,EAAI,GAErC1J,KAAKS,SAAS,CAAEC,SAAS,EAAM+F,QAAQA,EAAQC,QAAQA,EACrDC,MAAMA,EAAMC,IAAIA,EAAKC,MAAMA,EAAMC,KAAKA,EAAMC,KAAKA,GAAO,wDAiB3CvG,GACRA,EAAE0B,OAAOC,MACjBnC,KAAKS,SAAS,CAAE6G,YAAY,GAAQ,+CAc5B,IAAAhF,EAAAtC,KACC4J,EAAsB5J,KAAKF,MAAMqH,KAAjCyC,kBACFC,EAAiB,CACrBC,SAAU,CACRC,GAAI,CAAEC,KAAM,IACZC,GAAI,CAAED,KAAM,IAEdE,WAAY,CACVH,GAAI,CAAEC,KAAM,IACZC,GAAI,CAAED,KAAM,MAyBhB,OACE5N,EAAAC,QAAAC,cAAA,OAAKiD,GAAG,gBACNnD,EAAAC,QAAAC,cAAAmI,EAAApI,QAAA,CAAMoH,MAAwB,QAAjBzD,KAAKa,MAAMtB,GAAe,OAAS,QAC9CnD,EAAAC,QAAAC,cAAA8J,EAAA/J,QAAA,CAAM8N,SAAUnK,KAAKmI,cACnB/L,EAAAC,QAAAC,cAAA8N,EAAA/N,QAAA,KACED,EAAAC,QAAAC,cAAA+N,EAAAhO,QAAA,CAAK2N,KAAM,IACT5N,EAAAC,QAAAC,cAAC6J,EAADmE,EAAA,GAAcT,EAAd,CAA8BU,MAAM,aACjCX,EAAkB,WAAY,CAC7BY,MAAO,CAAC,CAAEC,UAAU,EAAMpH,QAAS,kBADpCuG,CAGCxN,EAAAC,QAAAC,cAAAuD,EAAAxD,QAAA,CAAO8H,KAAK,OAAOlC,KAAK,gBAI9B7F,EAAAC,QAAAC,cAAA+N,EAAAhO,QAAA,CAAK2N,KAAM,IACT5N,EAAAC,QAAAC,cAAC6J,EAADmE,EAAA,GAAcT,EAAd,CAA8BU,MAAM,aACjCX,EAAkB,YAAa,CAC9BY,MAAO,CAAC,CAAEC,UAAU,EAAMpH,QAAS,eAAgBqH,YAAY,KADhEd,CAGCxN,EAAAC,QAAAC,cAAAuD,EAAAxD,QAAA,CAAO8H,KAAK,OAAOlC,KAAK,kBAKhC7F,EAAAC,QAAAC,cAAA8N,EAAA/N,QAAA,KACED,EAAAC,QAAAC,cAAA+N,EAAAhO,QAAA,CAAK2N,KAAM,IACT5N,EAAAC,QAAAC,cAAC6J,EAADmE,EAAA,GAhDe,CACzBR,SAAU,CACRC,GAAI,CAAEC,KAAM,GACZC,GAAI,CAAED,KAAM,IAEdE,WAAY,CACVH,GAAI,CAACC,KAAM,IACXC,GAAI,CAACU,IAAK,MAyCF,CAAkCJ,MAAM,SACrCX,EAAkB,eAAgB,CACjCY,MAAO,CAAC,CAAEC,UAAU,EAAMpH,QAAS,WAAYqH,YAAY,KAD5Dd,CAGCxN,EAAAC,QAAAC,cAAAuD,EAAAxD,QAAA,CAAO8H,KAAK,OAAOlC,KAAK,qBAMhC7F,EAAAC,QAAAC,cAAA8N,EAAA/N,QAAA,KACED,EAAAC,QAAAC,cAAA+N,EAAAhO,QAAA,CAAK2N,KAAM,IACT5N,EAAAC,QAAAC,cAAC6J,EAADmE,EAAA,GAAcT,EAAd,CAA8BU,MAAM,YACjCX,EAAkB,WAAY,CAC7BY,MAAO,CAAC,CAAEC,UAAU,EAAMpH,QAAS,cAAeqH,YAAY,KAD/Dd,CAGCxN,EAAAC,QAAAC,cAAAuD,EAAAxD,QAAA,CAAO8H,KAAK,OAAOlC,KAAK,WAAWmC,QAAS,SAAC5D,GAAD,OAAK8B,EAAKiC,eAAe/D,SAM3EpE,EAAAC,QAAAC,cAAA+N,EAAAhO,QAAA,CAAK2N,KAAM,IACT5N,EAAAC,QAAAC,cAAC6J,EAADmE,EAAA,GAAcT,EAAd,CAA8BU,MAAM,SACjCX,EAAkB,cAAe,GAAjCA,CAGCxN,EAAAC,QAAAC,cAAAiK,EAAAlK,QAAA,CAAQsI,MAAO,CAAEiG,SAAU,SAAYC,YAAY,EAAMnF,SAAU,SAACvD,GAAD,OAAUG,EAAKwI,eAAe,cAAc3I,KAC3GnC,KAAKa,MAAMoH,wBAOvB7L,EAAAC,QAAAC,cAAA8N,EAAA/N,QAAA,KACED,EAAAC,QAAAC,cAAA+N,EAAAhO,QAAA,CAAK2N,KAAM,IACT5N,EAAAC,QAAAC,cAAC6J,EAADmE,EAAA,GAAcT,EAAd,CAA8BU,MAAM,SACnCX,EAAkB,aAAc,GAAhCA,CAEGxN,EAAAC,QAAAC,cAAAiK,EAAAlK,QAAA,CAAS4F,KAAK,aAAc4I,YAAY,EAAOlG,MAAO,CAAGiG,SAAU,SAAWlF,SAAU,SAACvD,GAAD,OAAUG,EAAKwI,eAAe,aAAa3I,KAE9HnC,KAAKa,MAAMqH,eAKtB9L,EAAAC,QAAAC,cAAA+N,EAAAhO,QAAA,CAAK2N,KAAM,IACX5N,EAAAC,QAAAC,cAAC6J,EAADmE,EAAA,GAAcT,EAAd,CAA8BU,MAAM,OAClCX,EAAkB,YAAa,GAA/BA,CAEGxN,EAAAC,QAAAC,cAAAuD,EAAAxD,QAAA,CAAO8H,KAAK,OAAOlC,KAAK,YAAYmC,QAAS,SAAC5D,GAAD,OAAK8B,EAAKyI,kBAAkBvK,UAMhFpE,EAAAC,QAAAC,cAAC6J,EA/FiB,CACxB+D,WAAY,CACVH,GAAI,CACFC,KAAM,GACNgB,OAAQ,GAEVf,GAAI,CACFD,KAAM,GACNgB,OAAQ,KAwFJ5O,EAAAC,QAAAC,cAAA2I,EAAA5I,QAAA,CAAQ8H,KAAK,UAAU8G,SAAS,SAAStG,MAAO,CAAEuG,WAAY,SAA9D,MACA9O,EAAAC,QAAAC,cAAA2I,EAAA5I,QAAA,CAAQyB,KAAK,QAAQqG,KAAK,UAAUQ,MAAO,CAAEuG,WAAY,SAAzD,SAIN9O,EAAAC,QAAAC,cAAA,WACMF,EAAAC,QAAAC,cAAAsJ,EAAAvJ,QAAA,CAAQoH,MAAM,UAAUmB,MAAM,QAAQlE,QAASV,KAAKa,MAAMH,QAAUmF,KAAM7F,KAAKO,SAAUuF,SAAU9F,KAAKY,cACtGxE,EAAAC,QAAAC,cAAA8N,EAAA/N,QAAA,KACED,EAAAC,QAAAC,cAAA+N,EAAAhO,QAAA,CAAK2N,KAAM,IACX5N,EAAAC,QAAAC,cAAA+N,EAAAhO,QAAA,CAAK2N,KAAM,GAAX,KACA5N,EAAAC,QAAAC,cAAA+N,EAAAhO,QAAA,CAAK2N,KAAM,GAAX,MACA5N,EAAAC,QAAAC,cAAA+N,EAAAhO,QAAA,CAAK2N,KAAM,GAAX,KACA5N,EAAAC,QAAAC,cAAA+N,EAAAhO,QAAA,CAAK2N,KAAM,GAAX,KACA5N,EAAAC,QAAAC,cAAA+N,EAAAhO,QAAA,CAAK2N,KAAM,GAAX,KACA5N,EAAAC,QAAAC,cAAA+N,EAAAhO,QAAA,CAAK2N,KAAM,GAAX,MACA5N,EAAAC,QAAAC,cAAA+N,EAAAhO,QAAA,CAAK2N,KAAM,GAAX,MAEF5N,EAAAC,QAAAC,cAAA8N,EAAA/N,QAAA,KACED,EAAAC,QAAAC,cAAA+N,EAAAhO,QAAA,CAAK2N,KAAM,GAAX,SACA5N,EAAAC,QAAAC,cAAA+N,EAAAhO,QAAA,CAAK2N,KAAM,GAAG5N,EAAAC,QAAAC,cAAAuD,EAAAxD,QAAA,CAAO4F,KAAK,UAAUE,MAAOnC,KAAKa,MAAM4F,QAASf,SAAU,SAAClF,GAAD,OAAK8B,EAAK6I,iBAAiB3K,IAAImE,MAAO,CAACC,MAAM,OACtHxI,EAAAC,QAAAC,cAAA+N,EAAAhO,QAAA,CAAK2N,KAAM,GAAG5N,EAAAC,QAAAC,cAAAuD,EAAAxD,QAAA,CAAO4F,KAAK,UAAUE,MAAOnC,KAAKa,MAAM6F,QAAShB,SAAU,SAAClF,GAAD,OAAK8B,EAAK6I,iBAAiB3K,IAAImE,MAAO,CAACC,MAAM,OACtHxI,EAAAC,QAAAC,cAAA+N,EAAAhO,QAAA,CAAK2N,KAAM,GAAG5N,EAAAC,QAAAC,cAAAuD,EAAAxD,QAAA,CAAO4F,KAAK,QAAQE,MAAOnC,KAAKa,MAAM8F,MAAOjB,SAAU,SAAClF,GAAD,OAAK8B,EAAK6I,iBAAiB3K,IAAImE,MAAO,CAACC,MAAM,OAClHxI,EAAAC,QAAAC,cAAA+N,EAAAhO,QAAA,CAAK2N,KAAM,GAAG5N,EAAAC,QAAAC,cAAAuD,EAAAxD,QAAA,CAAO4F,KAAK,MAAME,MAAOnC,KAAKa,MAAM+F,IAAKlB,SAAU,SAAClF,GAAD,OAAK8B,EAAK6I,iBAAiB3K,IAAImE,MAAO,CAACC,MAAM,OAC9GxI,EAAAC,QAAAC,cAAA+N,EAAAhO,QAAA,CAAK2N,KAAM,GAAG5N,EAAAC,QAAAC,cAAAuD,EAAAxD,QAAA,CAAO4F,KAAK,QAAQE,MAAOnC,KAAKa,MAAMgG,MAAOnB,SAAU,SAAClF,GAAD,OAAK8B,EAAK6I,iBAAiB3K,IAAImE,MAAO,CAACC,MAAM,OAClHxI,EAAAC,QAAAC,cAAA+N,EAAAhO,QAAA,CAAK2N,KAAM,GAAG5N,EAAAC,QAAAC,cAAAuD,EAAAxD,QAAA,CAAO4F,KAAK,OAAOE,MAAOnC,KAAKa,MAAMiG,KAAMpB,SAAU,SAAClF,GAAD,OAAK8B,EAAK6I,iBAAiB3K,IAAImE,MAAO,CAACC,MAAM,OAChHxI,EAAAC,QAAAC,cAAA+N,EAAAhO,QAAA,CAAK2N,KAAM,GAAG5N,EAAAC,QAAAC,cAAAuD,EAAAxD,QAAA,CAAO4F,KAAK,OAAOE,MAAOnC,KAAKa,MAAMkG,KAAMrB,SAAU,SAAClF,GAAD,OAAK8B,EAAK6I,iBAAiB3K,IAAImE,MAAO,CAACC,MAAM,UAIxHxI,EAAAC,QAAAC,cAAA,WACIF,EAAAC,QAAAC,cAAAsJ,EAAAvJ,QAAA,CAAQoH,MAAM,QAAQmB,MAAM,QAAQlE,QAASV,KAAKa,MAAMyG,WAAazB,KAAM7F,KAAKqH,YAAavB,SAAU9F,KAAK6H,iBACxGzL,EAAAC,QAAAC,cAAA8N,EAAA/N,QAAA,KACED,EAAAC,QAAAC,cAAA+N,EAAAhO,QAAA,CAAK2N,KAAM,GAAX,OACA5N,EAAAC,QAAAC,cAAA+N,EAAAhO,QAAA,CAAK2N,KAAM,EAAGrF,MAAO,CAACC,MAAM,GAAGsG,WAAW,KAA1C,UAEF9O,EAAAC,QAAAC,cAAA8N,EAAA/N,QAAA,CAAKsI,MAAO,CAACyG,QAAQ,oBACnBhP,EAAAC,QAAAC,cAAA+N,EAAAhO,QAAA,CAAK2N,KAAM,GAAG5N,EAAAC,QAAAC,cAAAuD,EAAAxD,QAAA,CAAO4F,KAAK,QAAQE,MAAOnC,KAAKa,MAAM0G,MAAO7B,SAAU,SAAClF,GAAD,OAAK8B,EAAK6I,iBAAiB3K,IAAImE,MAAO,CAACC,MAAM,QAClHxI,EAAAC,QAAAC,cAAA+N,EAAAhO,QAAA,CAAK2N,KAAM,GAAG5N,EAAAC,QAAAC,cAAAuD,EAAAxD,QAAA,CAAO4F,KAAK,UAAUE,MAAOnC,KAAKa,MAAM2G,QAAS9B,SAAU,SAAClF,GAAD,OAAK8B,EAAK6I,iBAAiB3K,IAAImE,MAAO,CAACC,MAAM,IAAIsG,WAAW,QAEvI9O,EAAAC,QAAAC,cAAA8N,EAAA/N,QAAA,CAAKsI,MAAO,CAACyG,QAAQ,oBACnBhP,EAAAC,QAAAC,cAAA+N,EAAAhO,QAAA,CAAK2N,KAAM,GAAG5N,EAAAC,QAAAC,cAAAuD,EAAAxD,QAAA,CAAO4F,KAAK,QAAQE,MAAOnC,KAAKa,MAAM4G,MAAO/B,SAAU,SAAClF,GAAD,OAAK8B,EAAK6I,iBAAiB3K,IAAImE,MAAO,CAACC,MAAM,QAClHxI,EAAAC,QAAAC,cAAA+N,EAAAhO,QAAA,CAAK2N,KAAM,GAAG5N,EAAAC,QAAAC,cAAAuD,EAAAxD,QAAA,CAAO4F,KAAK,UAAUE,MAAOnC,KAAKa,MAAM6G,QAAShC,SAAU,SAAClF,GAAD,OAAK8B,EAAK6I,iBAAiB3K,IAAImE,MAAO,CAACC,MAAM,IAAIsG,WAAW,QAEvI9O,EAAAC,QAAAC,cAAA8N,EAAA/N,QAAA,CAAKsI,MAAO,CAACyG,QAAQ,oBACnBhP,EAAAC,QAAAC,cAAA+N,EAAAhO,QAAA,CAAK2N,KAAM,GAAG5N,EAAAC,QAAAC,cAAAuD,EAAAxD,QAAA,CAAO4F,KAAK,QAAQE,MAAOnC,KAAKa,MAAM8G,MAAOjC,SAAU,SAAClF,GAAD,OAAK8B,EAAK6I,iBAAiB3K,IAAImE,MAAO,CAACC,MAAM,QAClHxI,EAAAC,QAAAC,cAAA+N,EAAAhO,QAAA,CAAK2N,KAAM,GAAG5N,EAAAC,QAAAC,cAAAuD,EAAAxD,QAAA,CAAO4F,KAAK,UAAUE,MAAOnC,KAAKa,MAAM+G,QAASlC,SAAU,SAAClF,GAAD,OAAK8B,EAAK6I,iBAAiB3K,IAAImE,MAAO,CAACC,MAAM,IAAIsG,WAAW,8BAQ1I9E,EAAA/J,QAAKgP,QAALjF,CAAcxJ,6bClU7B,QAAAb,EAAA,IACAC,EAAAD,EAAA,SACAA,EAAA,UACAA,EAAA,iLAGoB,MADpBA,EAAA,MACwBsB,SACV,IAAI8B,UADlB,IAEMS,EAASC,EAAAxD,QAAMuD,OAGA/C,cACnB,SAAAA,EAAYiD,GAAO,IAAAwL,+FAAAvL,CAAAC,KAAAnD,GAAA,IAAAoD,mKAAAC,CAAAF,MAAAnD,EAAAsD,WAAAC,OAAAC,eAAAxD,IAAAyD,KAAAN,KACXF,IADW,OAEjBG,EAAKY,MAAQ,CACXC,KAAM,EAAAwK,EAAA,CACJ/L,GAAI,EACJgM,QAAS,MACTC,SAAU,KACVC,WAAY,oBACZC,SAAU,sBALNrJ,EAAAiJ,EAAA,WAMM,sBANNjJ,EAAAiJ,EAAA,WAOM,OAPNA,IASN3K,SAAU,EACVsC,SAAU,GACVhC,SAAU,OACVC,cAAe,IAfAjB,qUADoB/D,UAAMC,+CAsBpC,IAAAqF,EAAAxB,KAIDqF,EAAarF,KAAKa,MAAMC,KAExB0C,EAAU,CAAC,CACfC,MAAO,OACPC,UAAW,KACXC,IAAK,MACJ,CACDF,MAAO,OACPC,UAAW,UACXC,IAAK,UACLC,OAAQ,SAAUC,EAAMC,EAAQC,GAC9B,OAAO3H,EAAAC,QAAAC,cAACN,EAAAgI,KAAD,CAAM9G,GAAA,kBAAsB4G,EAAOvE,IAAOsE,KAElD,CACDJ,MAAO,OACPC,UAAW,aACXC,IAAK,cAEJ,CACDF,MAAO,OACPC,UAAW,WACXC,IAAK,YACJ,CACDF,MAAO,OACPC,UAAW,eACXC,IAAK,gBAEP,CACEF,MAAO,OACPC,UAAW,WACXC,IAAK,YACJ,CACDF,MAAO,OACPC,UAAW,cACXC,IAAK,eAEJ,CACDF,MAAO,OACPC,UAAW,eACXC,IAAK,gBACJ,CACDF,MAAO,KACPC,UAAW,KACXE,OAAQ,SAACC,EAAMC,GAAP,OACN1H,EAAAC,QAAAC,cAAA,YACoB,KAAjBwH,EAAO6H,OAAgBvP,EAAAC,QAAAC,cAACN,EAAAgI,KAAD,CAAM9G,GAAA,kBAAsB4G,EAAOvE,IAAnC,MAAqD,OAKnF,OACEnD,EAAAC,QAAAC,cAAA,OAAKiD,GAAG,gBACNnD,EAAAC,QAAAC,cAAAmI,EAAApI,QAAA,CAAMoH,MAAM,QACVrH,EAAAC,QAAAC,cAAAoI,EAAArI,QAAA,KACED,EAAAC,QAAAC,cAACsD,EAAD,CACE+E,MAAO,CAAEC,MAAO,IAAKC,aAAc,QACnCC,YAAY,SACZC,YAAY,KACZC,SAAU,SAAA7C,GAAA,OAASX,EAAKwD,SAAS7C,OAGrC/F,EAAAC,QAAAC,cAAAoI,EAAArI,QAAA,KACED,EAAAC,QAAAC,cAAA2I,EAAA5I,QAAA,CAAQyB,KAAK,qBAAqB6G,MAAO,CAAEO,MAAO,QAASC,YAAa,QAAUhB,KAAK,WAAvF,SAGF/H,EAAAC,QAAAC,cAAA8I,EAAA/I,QAAA,CAAOgJ,WAAYA,EAAY7B,QAASA,EAAS8B,YAAY,IAC7DlJ,EAAAC,QAAAC,cAACiJ,EAAAlJ,QAAD,CAAYmJ,QAASxF,KAAKa,MAAMF,SAC9BkB,MAAO7B,KAAKa,MAAMgB,MAClB6D,SAAU,SAAC/E,GAAD,OAAca,EAAKmE,gBAAgBhF,2BA9FpC9D,oXCXrB,QAAAd,EAAA,QACAA,EAAA,UACAA,EAAA,yDAGoB,MADpBA,EAAA,MACwBsB,SAAxB,IACMsC,EAAO,IAAIR,UACXrC,cACF,SAAAA,EAAYgD,gGAAMC,CAAAC,KAAAlD,GAAA,IAAAmD,mKAAAC,CAAAF,MAAAlD,EAAAqD,WAAAC,OAAAC,eAAAvD,IAAAwD,KAAAN,KACRF,IADQ,OAAAG,EAUlB2L,KAAO,WAAM,IACDnF,EAAYxG,EAAKY,MAAjB4F,QACRxG,EAAKQ,SAAS,CAAEgG,QAASA,EAAU,IACd,GAAlBxG,EAAKY,MAAMgB,OAAY5B,EAAKY,MAAMgL,KAAK5L,EAAKY,MAAMgB,MACjD5B,EAAK6L,cACkB,GAAlB7L,EAAKY,MAAMgB,OAA4B,GAAhB5B,EAAKY,MAAMgL,KACvC5L,EAAK6L,eAdT7L,EAAKY,MAAQ,CACTtB,GAAIU,EAAKH,MAAMiI,MAAMC,OAAOzI,GAC5BuB,KAAkB,GAClB2F,QAAS,EACTsF,MAAO,EACPlK,MAAM,EAAEgK,IAAI,GAPF5L,qUADD/D,UAAMC,0DAqBJ,IAAAqF,EAAAxB,KACdA,KAAKgM,SAAWC,YAAY,kBAAMzK,EAAKoK,QAAQ,oDAGhDM,cAAclM,KAAKgM,gDAGV,IAAAhK,EAAAhC,KACTL,EAAKwM,qBAAqBnM,KAAKa,MAAMtB,IAAIV,KAAK,SAAAC,GAC1C,GAAwB,QAArBA,EAAS8J,WAAmB,CAC3B,IAAIiD,EAAMO,WAAWtN,EAAS6C,KAAK6D,SAC/B3D,EAAQuK,WAAWtN,EAAS6C,KAAK0K,OACjCN,EAAOlK,GAAS,EAAI,IAAOyK,KAAKC,MAAMV,EAAMhK,EAAQ,KAAS,IAEjEG,EAAKvB,SAAS,CAAEsL,MAAOA,EAAMlK,MAAMA,EAAMgK,IAAIA,MAElD,SAAA9J,GACCC,EAAKvB,SAAS,CACVK,KAAO,wCAgBf,OACI1E,EAAAC,QAAAC,cAAA,OAAKiD,GAAG,gBACRnD,EAAAC,QAAAC,cAAA,OAAKqI,MAAO,CAACuG,WAAY,UACjB9O,EAAAC,QAAAC,cAACkQ,EAAAnQ,QAAD,CACIoQ,SAAUzM,KAAKa,MAAMkL,MACrB/F,KAAK,MACL0G,UAAU,QAGlBtQ,EAAAC,QAAAC,cAAAmI,EAAApI,QAAA,CAAMoH,MAAM,QACPrH,EAAAC,QAAAC,cAAA,sBAAc0D,KAAKa,MAAM4F,SAC1BrK,EAAAC,QAAAC,cAAA8I,EAAA/I,QAAA,CAAOgJ,WAAYrF,KAAKa,MAAMC,KAAM0C,QApBhC,CAAC,CACbC,MAAO,OACPC,UAAW,KACXC,IAAK,MACL,CACAF,MAAO,OACPC,UAAW,UACXC,IAAK,YAa0D2B,YAAY,yBAOxExI","file":"4.js","sourcesContent":["import React            from 'react';\r\nimport { HashRouter as Router, Switch, Redirect, Route, Link } from 'react-router-dom'\r\n// 页面\r\nimport JobList from './JobList.jsx';\r\nimport JobInfo from './JobInfo.jsx';\r\nimport JobExecInfo from './jobExecInfo.jsx';\r\nimport JobLog from './JobLog.jsx';\r\n\r\nclass RouterJob extends React.Component{\r\n    render(){\r\n        return (\r\n            <Switch>\r\n                 <Route path=\"/Job/JobList\" component={JobList} />\r\n                 <Route path=\"/Job/JobInfo/:id\" component={JobInfo} />\r\n                 <Route path=\"/Job/JobExecInfo/:id\" component={JobExecInfo} />\r\n                 <Route path=\"/Job/JobLog/:id\" component={JobLog} />\r\n                 <Redirect exact from=\"/Job\" to=\"/Job/JobList\"/> \r\n            </Switch>\r\n        )\r\n    }\r\n}\r\nexport default RouterJob;","import 'whatwg-fetch';\r\nimport  LocalStorge  from './LogcalStorge.jsx';\r\nconst localStorge = new LocalStorge();\r\nexport default class HttpService {\r\n    \r\n    static getBaseUrl(){\r\n\r\n        var url=window.getServerUrl();//\"http://localhost:8080/\";\r\n        return url;\r\n    }\r\n    \r\n    //\r\n    static post(url,param){\r\n        if((undefined==localStorge.getStorage('userInfo') && url!='/reportServer/user/encodePwd' && url!='/reportServer/user/Reactlogin') || (''==localStorge.getStorage('userInfo')  && url!='/reportServer/user/encodePwd' && url!='/reportServer/user/Reactlogin')){\r\n            window.location.href='#login';\r\n            return  new Promise((resolve, reject) => {});\r\n        }else{\r\n            const fullUrl = HttpService.getBaseUrl() + url;\r\n            let opts = {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Access-Control-Allow-Origin': '*',\r\n                    credentials: JSON.stringify(localStorge.getStorage('userInfo') || '')\r\n                },\r\n                body: param\r\n            };\r\n\r\n            return fetch(fullUrl, opts).then((response) => {\r\n                    //console.log(response.json())\r\n                    return response.json();\r\n                }).catch((error)=>{\r\n                    return error.json();\r\n                });\r\n        }\r\n    }\r\n\r\n    get(){\r\n\r\n    }\r\n\r\n          \r\n    }\r\n","/*\r\n* @Author: Rosen\r\n* @Date:   2018-01-31 13:19:15\r\n* @Last Modified by:   Rosen\r\n* @Last Modified time: 2018-02-04 22:52:34\r\n*/\r\n\r\nimport   HttpService  from '../util/HttpService.jsx';\r\n\r\nclass JobService{\r\n    // 获取任务列表\r\n    getList(listParam){\r\n      \r\n        return HttpService.post('transfer/job/getAllJob',JSON.stringify(listParam));\r\n    }\r\n    //获取已经在执行的任务列表\r\n    getJobExecuteByJobId(page){\r\n        return HttpService.post('transfer/jobExecute/getJobExecuteByJobId',JSON.stringify(page));\r\n    }\r\n    getJobExecutePorcess(id){\r\n        return HttpService.post('transfer/jobExecute/getJobExecutePorcess',JSON.stringify({job_execute_id:id}));\r\n    }\r\n    // 获取任务详情\r\n    getJobInfo(JobId){\r\n        return HttpService.post('transfer/job/getJobById',JSON.stringify({id:JobId}));\r\n    }\r\n     // 保存\r\n    save(Param){\r\n        if(Param.id=='null'){\r\n            return HttpService.post('transfer/job/createJob',JSON.stringify(Param));\r\n        }else{\r\n            return HttpService.post('transfer/job/updateJob',JSON.stringify(Param));\r\n        }\r\n    }\r\n    //删除一个job\r\n    delJob(id){\r\n        return HttpService.post('transfer/job/deleteJob',JSON.stringify({id:id}));\r\n    }\r\n    //立即执行一个QuartzJob\r\n    executeJob(id){\r\n        return HttpService.post('transfer/job/executeJob',JSON.stringify({id:id}));\r\n    }\r\n    //暂停一个QuartzJob\r\n    pauseJob(id){\r\n        return HttpService.post('transfer/job/pauseJob',JSON.stringify({id:id}));\r\n    }\r\n    //还原一个QuartzJob\r\n    resumeJob(id){\r\n        return HttpService.post('transfer/job/resumeJob',JSON.stringify({id:id}));\r\n    }\r\n    getAllTransfer(){\r\n        return HttpService.post('transfer/sql/getAllTransferList',null);\r\n    }\r\n}\r\n\r\nexport default JobService;","import React        from 'react';\r\nimport { Link }             from 'react-router-dom';\r\nimport JobService                 from '../../service/JobService.jsx';\r\nimport Pagination           from 'antd/lib/pagination';\r\nimport {Table,Divider,Button,Card, Tooltip,Input,Modal}  from 'antd';\r\nimport  LocalStorge         from '../../util/LogcalStorge.jsx';\r\nconst localStorge = new LocalStorge();\r\nconst _job = new JobService();\r\nconst Search = Input.Search;\r\n\r\nclass JobList extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            list            : [],\r\n            pageNum        : 1,\r\n            perPage        : 10,\r\n            listType        :'list',\r\n            searchKeyword:'',\r\n            dictionaryList:[],\r\n            pageNumd :1,\r\n            searchDictionary:\"\",\r\n            paramValue:\"\",\r\n            totald:0,\r\n        };\r\n    }\r\n    componentDidMount(){\r\n         this.loadJobList();\r\n    }\r\n    loadJobList(){\r\n        let listParam = {};\r\n        listParam.pageNum  = this.state.pageNum;\r\n        listParam.perPage  = this.state.perPage;\r\n        // 如果是搜索的话，需要传入搜索类型和搜索关键字\r\n        if(this.state.listType === 'search'){\r\n            listParam.keyword    = this.state.searchKeyword;\r\n        }\r\n        _job.getList(listParam).then(response => {\r\n            this.setState({list:response.data.resultRows,total:response.data.resultTotal});\r\n        }, errMsg => {\r\n            this.setState({\r\n                list : []\r\n            });\r\n            // _mm.errorTips(errMsg);\r\n        });\r\n    }\r\n    // 页数发生变化的时候\r\n    onPageNumChange(pageNum){\r\n        this.setState({\r\n            pageNum : pageNum\r\n        }, () => {\r\n            this.loadJobList();\r\n        });\r\n    }\r\n    // 数据变化的时候\r\n    onValueChange(e){\r\n        let name    = e.target.name,\r\n            value   = e.target.value.trim();\r\n        this.setState({\r\n            [name] : value\r\n        });\r\n    }\r\n     // 搜索\r\n     onSearch(searchKeyword){\r\n        let listType = searchKeyword === '' ? 'list' : 'search';\r\n        this.setState({\r\n            listType:listType,\r\n            pageNum         : 1,\r\n            searchKeyword   : searchKeyword\r\n        }, () => {\r\n            this.loadJobList();\r\n        });\r\n    }\r\n    deleteJob(id,status){\r\n        if(status=='1'){\r\n            alert(\"正在运行中不能删除！\");\r\n            return false;\r\n        }\r\n        if(confirm('确认删除吗？')){\r\n            _job.delJob(id).then(response => {\r\n                alert(\"删除成功\");\r\n                this.loadJobList();\r\n            }, errMsg => {\r\n                alert(\"删除失败\");\r\n                // _mm.errorTips(errMsg);\r\n            });\r\n        }\r\n    }\r\n    stopJob(id,status){\r\n        if(status==0){\r\n            _job.executeJob(id).then(response => {\r\n                alert(\"启动成功\");\r\n                this.loadJobList();\r\n            }, errMsg => {\r\n                alert(\"启动失败\");\r\n            });\r\n        }else{\r\n            _job.pauseJob(id).then(response => {\r\n                alert(\"暂停成功\");\r\n                this.loadJobList();\r\n            }, errMsg => {\r\n                alert(\"暂停失败\");\r\n            });\r\n           \r\n        }  \r\n    }\r\n  //打开模式窗口\r\n  openModelClick(id){\r\n    this.setState({ visible: true,dictionaryList:[],paramValue:id,totald:0},function(){\r\n      this.loadModelData(id);\r\n    });\r\n  }\r\n  //调用模式窗口内的数据查询\r\n   loadModelData(param){\r\n    let page = {};\r\n    page.pageNumd  = this.state.pageNumd;\r\n    page.perPaged  = 10;\r\n    page.searchDictionary=this.state.searchDictionary;\r\n    page.job_id=param;\r\n        _job.getJobExecuteByJobId(page).then(response=>{\r\n             this.setState({dictionaryList:response.data.resultRows,totald:response.data.resultTotal});\r\n        }).catch(error=>{\r\n            this.setState({loading:false});\r\n            message.error(error);\r\n        });\r\n    }\r\n    // 字典页数发生变化的时候\r\n    onPageNumdChange(pageNumd){\r\n        this.setState({\r\n            pageNumd : pageNumd\r\n        }, () => {\r\n            this.loadModelData(this.state.paramValue);\r\n        });\r\n    }\r\n    //模式窗口点击确认\r\n    handleOk = (e) => {\r\n        this.setState({visible: false,pageNumd:1});\r\n    }\r\n    //模式窗口点击取消\r\n    handleCancel = (e) => {\r\n        this.setState({visible: false, });\r\n    }\r\n   \r\n    render(){\r\n        // this.state.list.map((item,index)=>{\r\n        //     item.key=index;\r\n        // })\r\n        const dataSource = this.state.list;\r\n        const columns = [{\r\n            title: '任务编号',\r\n            dataIndex: 'id',\r\n            key: 'id'\r\n          },{\r\n            title: '任务名称（英文）',\r\n            dataIndex: 'job_name',\r\n            key: 'job_name',\r\n            render: function(text, record, index) {\r\n               return <Link to={ `/Job/JobLog/${record.id}` }>{text}</Link>;\r\n             } \r\n          }, {\r\n            title: '任务组别',\r\n            dataIndex: 'job_group',\r\n            key: 'job_group',\r\n           \r\n          },{\r\n            title:'任务表达式',\r\n            dataIndex:'job_cron',\r\n            key:'job_cron'\r\n          },\r\n        {\r\n            title: '任务描述',\r\n            dataIndex: 'job_describe',\r\n            key: 'job_describe'\r\n       \r\n        }, \r\n        {\r\n            title: '运行状态',\r\n            dataIndex: 'job_status',\r\n            key: 'job_status',\r\n            render: (text, record) => (\r\n                <span>\r\n                   {record.job_status=='0'?'停用':'启用'}\r\n                </span>\r\n            ),\r\n          },{\r\n            title: '操作',\r\n            dataIndex: '操作',\r\n            render: (text, record) => (\r\n                <span>\r\n                  <Link to={ `/Job/JobInfo/${record.id}` }>编辑</Link>\r\n                  <Divider type=\"vertical\" />\r\n                  <a onClick={()=>this.deleteJob(`${record.id}`,`${record.job_status}`)} href=\"javascript:;\">删除</a>\r\n                  <Divider type=\"vertical\" />\r\n                  <a onClick={()=>this.stopJob(`${record.id}`,`${record.job_status}`)} href=\"javascript:;\">{record.job_status=='1'?'暂停':'启用'}</a>\r\n                  <Divider type=\"vertical\" />\r\n                  <a onClick={e=>this.openModelClick(`${record.id}`)}  href=\"javascript:;\">查看任务执行</a>\r\n                </span>\r\n              ),\r\n          }];\r\n          const dictionaryColumns=[{\r\n                title: '任务编号',\r\n                dataIndex: 'id',\r\n                key: 'id'\r\n            // }, {\r\n            //     title: '任务名称',\r\n            //     dataIndex: 'job_name',\r\n            //     key: 'job_name',\r\n            }, {\r\n                title: '开始时间',\r\n                dataIndex: 'begin_time',\r\n                key: 'begin_time',\r\n\r\n            }, {\r\n                title: '结束进间',\r\n                dataIndex: 'end_time',\r\n                key: 'end_time'\r\n            }, {\r\n                title: '执行结果',\r\n                dataIndex: 'job_process',\r\n                key: 'job_process',\r\n            }, {\r\n                title: '失败原因',\r\n                dataIndex: 'job_failure_reason',\r\n                key: 'job_failure_reason'\r\n            }, {\r\n                title: '任务状态',\r\n                dataIndex: 'job_status',\r\n                key: 'job_status',\r\n                render: (text, record) => (\r\n                        <span>\r\n                        {record.job_status== '0' ? '暂停': '启用'}\r\n                        </span>\r\n                )       \r\n            }, {\r\n                title: '操作',\r\n                dataIndex: '操作',\r\n                render: (text, record) => (\r\n                    <span>\r\n                    <Link to={`/Job/jobLog/${record.id}`}>日志</Link>\r\n                    </span>\r\n                ),\r\n            }];\r\n        return (\r\n            <div id=\"page-wrapper\">\r\n            <Card title=\"任务列表\">\r\n                <Tooltip>\r\n                     <Search\r\n                        style={{ width: 300,marginBottom:'10px' }}\r\n                        placeholder=\"请输入...\"\r\n                        enterButton=\"查询\"\r\n                        onSearch={value => this.onSearch(value)}\r\n                        />\r\n                </Tooltip>\r\n                <Tooltip>\r\n                    <Button href=\"#/Job/JobInfo/null\" style={{ float: \"right\", marginRight: \"30px\" }} type=\"primary\">新建任务</Button>\r\n                </Tooltip>\r\n                \r\n                <Table dataSource={this.state.list} columns={columns}  pagination={false}/>\r\n                <Pagination current={this.state.pageNum} \r\n                        total={this.state.total}  showTotal={total => `共 ${this.state.total}条`}\r\n                        onChange={(pageNum) => this.onPageNumChange(pageNum)}/> \r\n            </Card>\r\n            <div>\r\n                <Modal  title=\"执行结果列表\" width='800px' visible={this.state.visible}  onOk={this.handleOk} onCancel={this.handleCancel}>\r\n                    {/* <Search\r\n                        style={{ width: 300,marginBottom:'10px' }}\r\n                        placeholder=\"请输入...\" enterButton=\"查询\"\r\n                        onSearch={value => this.onDictionarySearch(value)}\r\n                        /> */}\r\n                        <Table ref=\"diction\"  columns={dictionaryColumns} \r\n                        dataSource={this.state.dictionaryList} size=\"small\" bordered  pagination={false}/>\r\n                        <Pagination current={this.state.pageNumd} \r\n                        total={this.state.totald}  showTotal={total => `共 100条`}\r\n                        onChange={(pageNum) => this.onPageNumdChange(pageNum)}/> \r\n                </Modal>\r\n            </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default JobList;","import React from 'react';\r\nimport { Form, Input, Select, Button, Card, Row, Col,Modal } from 'antd';\r\nimport LocalStorge from '../../util/LogcalStorge.jsx';\r\nimport JobService from '../../service/JobService.jsx';\r\nconst _job = new JobService();\r\nconst localStorge = new LocalStorge();\r\nconst FormItem = Form.Item;\r\nconst Option = Select.Option;\r\n\r\nclass JobInfo extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      confirmDirty: false,\r\n      id: this.props.match.params.id,\r\n      visible:false,\r\n      visibletwo:false,\r\n      seconds:\"\",\r\n      minutes:\"\",\r\n      hours:\"\",\r\n      day:\"\",\r\n      month:\"\",\r\n      week:\"\",\r\n      year:\"\",\r\n      selectTransferList:[],\r\n      selectList:[],\r\n      mkey1:\"global_param\",      mvalue1:\"\",\r\n      mkey2:\"transfer_id\",      mvalue2:\"\",\r\n      mkey3:\"task_path\",      mvalue3:\"\",\r\n    };\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleConfirmBlur = this.handleConfirmBlur.bind(this);\r\n  }\r\n\r\n  //初始化加载调用方法\r\n  componentDidMount() {\r\n        let sl=[{id:0,name:'停用'},{id:1,name:'启用'}];\r\n        const children2=[],children3=[];\r\n        _job.getAllTransfer().then(response=>{\r\n          console.log(response);\r\n          if(response.resultCode!='3000'){\r\n            let rlist=response.data;\r\n            for (let i = 0; i < rlist.length; i++) {\r\n                children2.push(<Option key={rlist[i].transfer_id} value={rlist[i].transfer_id}>{rlist[i].transfer_name}</Option>);\r\n            }\r\n            this.setState({selectTransferList:children2});\r\n          }\r\n      });\r\n      for (let i = 0; i < sl.length; i++) {\r\n          children3.push(<Option key={sl[i].id} value={sl[i].id}>{sl[i].name}</Option>);\r\n      }\r\n      this.setState({selectList:children3});\r\n\r\n       if(null!=this.state.id && ''!=this.state.id  && 'null'!=this.state.id){\r\n          _job.getJobInfo(this.state.id).then(response => {\r\n                this.setState(response.data);\r\n                this.props.form.setFieldsValue(response.data);\r\n\r\n            }, errMsg => {\r\n                this.setState({});\r\n            });\r\n        }\r\n\r\n  }\r\n\r\n\r\n  //编辑字段对应值\r\n  onValueChange(e) {\r\n    let name = e.target.name,\r\n      value = e.target.value.trim();\r\n    //this.setState({[name]:value});  \r\n    this.props.form.setFieldsValue({ [name]: value });\r\n\r\n  }\r\n //编辑字段对应值\r\n onValueChangetwo(e) {\r\n  let name = e.target.name,\r\n    value = e.target.value.trim();\r\n    this.setState({[name]:value});\r\n\r\n  }\r\n  //编辑字段对应值\r\n  onSelectChange(name,value){\r\n    this.setState({[name]:value});  \r\n    this.props.form.setFieldsValue({[name]:value});\r\n  }\r\n  //提交\r\n  handleSubmit(e) {\r\n    e.preventDefault();\r\n    this.props.form.validateFieldsAndScroll((err, values) => {\r\n      console.log(values);\r\n      if (!err) {\r\n        values.id = this.state.id;\r\n        _job.save(values).then(response => {\r\n          alert(\"保存成功\");\r\n          window.location.href = \"#/Job\";\r\n        }, errMsg => {\r\n          this.setState({});\r\n          localStorge.errorTips(errMsg);\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  handleConfirmBlur(e) {\r\n    const value = e.target.value;\r\n    this.setState({ confirmDirty: this.state.confirmDirty || !!value });\r\n  }\r\n //打开模式窗口\r\n openModelClick(e){\r\n   let vl=e.target.value;\r\n   let seconds=\"\",minutes=\"\",hours=\"\",day=\"\", month=\"\", week=\"\", year=\"\";\r\n   if(vl!=\"\" && vl!=null){\r\n      let arr= vl.split(\" \");\r\n      seconds=arr[0];minutes=arr[1]; hours=arr[2]; day=arr[3];\r\n      month=arr[4];week=arr[5]; year=arr[6];\r\n   }\r\n    this.setState({ visible: true, seconds:seconds,minutes:minutes, \r\n      hours:hours,day:day, month:month,week:week, year:year,},function(){});\r\n  }\r\n  //模式窗口点击确认\r\n  handleOk = (e) => {\r\n    let corns=this.state.seconds+\" \"+this.state.minutes+\" \"+this.state.hours+\" \"+this.state.day+\" \"+this.state.month+\" \"+this.state.week+\" \"+this.state.year;\r\n    if(this.state.year.trim()==\"\"){\r\n      corns=corns.substring(0,corns.length-1);\r\n    }\r\n    this.setState({visible: false,jobCron:corns, seconds:\"\",minutes:\"\",hours:\"\",day:\"\",month:\"\", week:\"\",year:\"\",});\r\n    this.props.form.setFieldsValue({ ['job_cron']: corns });\r\n  }\r\n  //模式窗口点击取消\r\n  handleCancel = (e) => {\r\n    this.setState({visible: false, seconds:\"\",minutes:\"\",hours:\"\",day:\"\",month:\"\", week:\"\",year:\"\"});\r\n  }\r\n\r\n  //打开模式窗口\r\n openModelClickTwo(e){\r\n   let vls=e.target.value;\r\n   this.setState({ visibletwo: true, },function(){});\r\n }\r\n //模式窗口点击确认\r\n handleOktwo = (e) => {\r\n   \r\n   this.setState({visibletwo: false, mkey1:'global_param',mvalue1:'',mkey2:'transfer_id',mvalue2:'',mkey3:'task_path',mvalue3:''});\r\n   this.props.form.setFieldsValue({ ['job_param']: '{'+this.state.mkey1+':\"'+this.state.mvalue1+'\",'+this.state.mkey2+':\"'+this.state.mvalue2+'\",'+\r\n   this.state.mkey3+':\"'+this.state.mvalue3+'\"}' });\r\n }\r\n //模式窗口点击取消\r\n handleCanceltwo = (e) => {\r\n   this.setState({visibletwo: false, mkey1:'global_param',mvalue1:'',mkey2:'transfer_id',mvalue2:'',mkey3:'task_path',mvalue3:''});\r\n }\r\n\r\n  render() {\r\n    const { getFieldDecorator } = this.props.form;\r\n    const formItemLayout = {\r\n      labelCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 8 },\r\n      },\r\n      wrapperCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 16 },\r\n      },\r\n    };\r\n    const tailFormItemLayout = {\r\n      labelCol: {\r\n        xs: { span: 4 },\r\n        sm: { span: 4 },\r\n      },\r\n      wrapperCol: {\r\n        xs: {span: 20},\r\n        sm: {pan: 20},\r\n      },\r\n    };\r\n    const BtnFormItemLayout = {\r\n      wrapperCol: {\r\n        xs: {\r\n          span: 24,\r\n          offset: 0,\r\n        },\r\n        sm: {\r\n          span: 16,\r\n          offset: 8,\r\n        },\r\n      },\r\n    };\r\n    return (\r\n      <div id=\"page-wrapper\">\r\n        <Card title={this.state.id == 'null' ? '新建任务' : '编辑任务'}>\r\n          <Form onSubmit={this.handleSubmit}>\r\n            <Row>\r\n              <Col span={12}>\r\n                <FormItem {...formItemLayout} label=\"任务名称（英文）\">\r\n                  {getFieldDecorator('job_name', {\r\n                    rules: [{ required: true, message: '请输入任务名称（英文）!' }],\r\n                  })(\r\n                    <Input type='text' name='job_name' />\r\n                  )}\r\n                </FormItem>\r\n              </Col>\r\n              <Col span={12}>\r\n                <FormItem {...formItemLayout} label='任务组别（英文）' >\r\n                  {getFieldDecorator('job_group', {\r\n                    rules: [{ required: true, message: '请选择任务组别（英文）!', whitespace: true }],\r\n                  })(\r\n                    <Input type='text' name='job_group' />\r\n                  )}\r\n                </FormItem>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col span={24}>\r\n                <FormItem {...tailFormItemLayout} label='任务描述'>\r\n                  {getFieldDecorator('job_describe', {\r\n                    rules: [{ required: true, message: '请输入任务描述!', whitespace: true }],\r\n                  })(\r\n                    <Input type='text' name='job_describe' />\r\n                  )}\r\n                </FormItem>\r\n              </Col>\r\n             \r\n            </Row>\r\n            <Row>\r\n              <Col span={12}>\r\n                <FormItem {...formItemLayout} label='Cron表达式' >\r\n                  {getFieldDecorator('job_cron', {\r\n                    rules: [{ required: true, message: '请输入Cron表达式!', whitespace: true }],\r\n                  })(\r\n                    <Input type='text' name='job_cron' onClick={(e)=>this.openModelClick(e)}/>\r\n                  )}\r\n                </FormItem>\r\n              </Col>\r\n\r\n\r\n              <Col span={12}>\r\n                <FormItem {...formItemLayout} label='任务脚本'>\r\n                  {getFieldDecorator('transfer_id', {\r\n                    // rules: [{ required: true, message: '请选择任务脚本!', whitespace: true }],\r\n                  })(\r\n                    <Select style={{ minWidth: '300px' }}  allowClear={true} onChange={(value) =>this.onSelectChange('transfer_id',value)}>\r\n                       {this.state.selectTransferList}\r\n                    </Select>\r\n                  )}\r\n                </FormItem>\r\n              </Col>\r\n            </Row>\r\n       \r\n            <Row>\r\n              <Col span={12} >\r\n                <FormItem {...formItemLayout} label='任务状态' >\r\n                {getFieldDecorator('job_status', {\r\n                  })(\r\n                    <Select  name='job_status'  allowClear={true}  style={{  minWidth: '300px' }} onChange={(value) =>this.onSelectChange('job_status',value)}>\r\n                        \r\n                        {this.state.selectList}\r\n                      </Select>\r\n                  )}\r\n                  </FormItem>\r\n              </Col>\r\n              <Col span={12}>\r\n              <FormItem {...formItemLayout} label='参数' >\r\n               {getFieldDecorator('job_param', {\r\n                  })(\r\n                   <Input type='text' name=\"job_param\" onClick={(e)=>this.openModelClickTwo(e)}/>\r\n                  )}\r\n                  </FormItem>\r\n              </Col>\r\n            </Row>\r\n\r\n            <FormItem {...BtnFormItemLayout}>\r\n              <Button type=\"primary\" htmlType=\"submit\" style={{ marginLeft: '30px' }}>保存</Button>\r\n              <Button href=\"#/Job\" type=\"primary\" style={{ marginLeft: '30px' }}>返回</Button>\r\n            </FormItem>\r\n          </Form>\r\n        </Card>\r\n        <div>\r\n              <Modal  title=\"corn表达式\" width='800px' visible={this.state.visible}  onOk={this.handleOk} onCancel={this.handleCancel}>\r\n                <Row>\r\n                  <Col span={3}></Col>\r\n                  <Col span={3}>秒</Col>\r\n                  <Col span={3}>分钟</Col>\r\n                  <Col span={3}>时</Col>\r\n                  <Col span={3}>日</Col>\r\n                  <Col span={3}>月</Col>\r\n                  <Col span={3}>星期</Col>\r\n                  <Col span={3}>年</Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col span={3}>表达式字段</Col>\r\n                  <Col span={3}><Input name='seconds' value={this.state.seconds} onChange={(e)=>this.onValueChangetwo(e)} style={{width:80}}/></Col>\r\n                  <Col span={3}><Input name='minutes' value={this.state.minutes} onChange={(e)=>this.onValueChangetwo(e)} style={{width:80}}/></Col>\r\n                  <Col span={3}><Input name='hours' value={this.state.hours} onChange={(e)=>this.onValueChangetwo(e)} style={{width:80}}/></Col>\r\n                  <Col span={3}><Input name='day' value={this.state.day} onChange={(e)=>this.onValueChangetwo(e)} style={{width:80}}/></Col>\r\n                  <Col span={3}><Input name='month' value={this.state.month} onChange={(e)=>this.onValueChangetwo(e)} style={{width:80}}/></Col>\r\n                  <Col span={3}><Input name='week' value={this.state.week} onChange={(e)=>this.onValueChangetwo(e)} style={{width:80}}/></Col>\r\n                  <Col span={3}><Input name='year' value={this.state.year} onChange={(e)=>this.onValueChangetwo(e)} style={{width:80}}/></Col>\r\n                </Row>\r\n              </Modal>\r\n          </div>\r\n          <div>\r\n              <Modal  title=\"param\" width='600px' visible={this.state.visibletwo}  onOk={this.handleOktwo} onCancel={this.handleCanceltwo}>\r\n                  <Row>\r\n                    <Col span={3}>key</Col>\r\n                    <Col span={3} style={{width:80,marginLeft:60}}>value</Col>\r\n                  </Row>\r\n                  <Row style={{padding:'5px 5px 5px 0px'}}>\r\n                    <Col span={3}><Input name='mkey1' value={this.state.mkey1} onChange={(e)=>this.onValueChangetwo(e)} style={{width:120}}/></Col>\r\n                    <Col span={3}><Input name='mvalue1' value={this.state.mvalue1} onChange={(e)=>this.onValueChangetwo(e)} style={{width:120,marginLeft:60}}/></Col>\r\n                  </Row>\r\n                  <Row style={{padding:'5px 5px 5px 0px'}}>\r\n                    <Col span={3}><Input name='mkey2' value={this.state.mkey2} onChange={(e)=>this.onValueChangetwo(e)} style={{width:120}}/></Col>\r\n                    <Col span={3}><Input name='mvalue2' value={this.state.mvalue2} onChange={(e)=>this.onValueChangetwo(e)} style={{width:120,marginLeft:60}}/></Col>\r\n                  </Row>\r\n                  <Row style={{padding:'5px 5px 5px 0px'}}>\r\n                    <Col span={3}><Input name='mkey3' value={this.state.mkey3} onChange={(e)=>this.onValueChangetwo(e)} style={{width:120}}/></Col>\r\n                    <Col span={3}><Input name='mvalue3' value={this.state.mvalue3} onChange={(e)=>this.onValueChangetwo(e)} style={{width:120,marginLeft:60}}/></Col>\r\n                  </Row>\r\n              </Modal>\r\n          </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Form.create()(JobInfo);\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport JobService from '../../service/JobService.jsx';\r\nimport Pagination from 'antd/lib/pagination';\r\nimport { Table, Divider, Button, Card, Tooltip, Input } from 'antd';\r\nimport LocalStorge from '../../util/LogcalStorge.jsx';\r\nconst localStorge = new LocalStorge();\r\nconst _user = new JobService();\r\nconst Search = Input.Search;\r\n\r\n\r\nexport default class JobExecInfo extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      list: [{\r\n        id: 1,\r\n        jobName: \"abc\",\r\n        jobGroup: \"ys\",\r\n        begin_time: \"2018-1-1 12:00:00\",\r\n        end_time: \"2018-1-1  13:00:00\",\r\n        end_time: \"2018-1-1  13:00:00\",\r\n        duration: \"1小时\"\r\n      }],\r\n      pageNumd: 1,\r\n      perPaged: 10,\r\n      listType: 'list',\r\n      searchKeyword: ''\r\n    };\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n    // this.state.list.map((item,index)=>{\r\n    //     item.key=index;\r\n    // })\r\n    const dataSource = this.state.list;\r\n    let self = this;\r\n    const columns = [{\r\n      title: '任务编号',\r\n      dataIndex: 'id',\r\n      key: 'id'\r\n    }, {\r\n      title: '任务名称',\r\n      dataIndex: 'jobName',\r\n      key: 'jobName',\r\n      render: function (text, record, index) {\r\n        return <Link to={`/user/UserView/${record.id}`}>{text}</Link>;\r\n      }\r\n    }, {\r\n      title: '开始时间',\r\n      dataIndex: 'begin_time',\r\n      key: 'begin_time',\r\n\r\n    }, {\r\n      title: '结束进间',\r\n      dataIndex: 'end_time',\r\n      key: 'end_time'\r\n    }, {\r\n      title: '执行结果',\r\n      dataIndex: 'jobClassPath',\r\n      key: 'jobClassPath',\r\n    },\r\n    {\r\n      title: '执行结果',\r\n      dataIndex: 'duration',\r\n      key: 'duration',\r\n    }, {\r\n      title: '失败原因',\r\n      dataIndex: 'jobDescribe',\r\n      key: 'jobDescribe'\r\n\r\n    }, {\r\n      title: '任务状态',\r\n      dataIndex: 'jobStatusStr',\r\n      key: 'jobStatusStr'\r\n    }, {\r\n      title: '操作',\r\n      dataIndex: '操作',\r\n      render: (text, record) => (\r\n        <span>\r\n          {record.userId != '1' ? <Link to={`/user/userInfo/${record.id}`}>编辑</Link> : ''}\r\n        </span>\r\n      ),\r\n    }];\r\n\r\n    return (\r\n      <div id=\"page-wrapper\">\r\n        <Card title=\"用户列表\">\r\n          <Tooltip>\r\n            <Search\r\n              style={{ width: 300, marginBottom: '10px' }}\r\n              placeholder=\"请输入...\"\r\n              enterButton=\"查询\"\r\n              onSearch={value => this.onSearch(value)}\r\n            />\r\n          </Tooltip>\r\n          <Tooltip>\r\n            <Button href=\"#/Job/JobInfo/null\" style={{ float: \"right\", marginRight: \"30px\" }} type=\"primary\">新建任务</Button>\r\n          </Tooltip>\r\n\r\n          <Table dataSource={dataSource} columns={columns} pagination={false} />\r\n          <Pagination current={this.state.pageNumd}\r\n            total={this.state.total}\r\n            onChange={(pageNumd) => this.onPageNumChange(pageNumd)} />\r\n        </Card>\r\n\r\n      </div>\r\n    )\r\n  }\r\n}","import React        from 'react';\r\nimport Circle from 'react-circle';\r\nimport JobService                 from '../../service/JobService.jsx';\r\nimport {Table,Divider,Button,Card, Tooltip,Input,Modal}  from 'antd';\r\nimport  LocalStorge         from '../../util/LogcalStorge.jsx';\r\nconst localStorge = new LocalStorge();\r\nconst _job = new JobService();\r\nclass JobLog extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            id: this.props.match.params.id,\r\n            list            : [],\r\n            seconds: 0,\r\n            score: 0,\r\n            total:0,num:0\r\n        };\r\n    }\r\n    tick = () => {\r\n        const { seconds } = this.state;\r\n        this.setState({ seconds: seconds + 1});\r\n        if(this.state.total!=0 && this.state.num!=this.state.total){\r\n            this.loadlogList();\r\n        }else if(this.state.total==0 && this.state.num==0){\r\n            this.loadlogList();\r\n        }\r\n    }\r\n    \r\n    componentDidMount(){\r\n         this.interval = setInterval(() => this.tick(), 1000);\r\n    }\r\n    componentWillUnmount() {\r\n        clearInterval(this.interval);\r\n    }\r\n   \r\n    loadlogList(){\r\n        _job.getJobExecutePorcess(this.state.id).then(response => {\r\n            if(response.resultCode=='1000'){\r\n                let num = parseFloat(response.data.current);\r\n                let total = parseFloat(response.data.count);\r\n                let score= total <= 0 ? \"0\" : (Math.round(num / total * 10000) / 100.00);\r\n                // this.setState({list:[...this.state.list,{id:this.state.seconds}]});\r\n                this.setState({ score: score,total:total,num:num });\r\n            }\r\n        }, errMsg => {\r\n            this.setState({\r\n                list : []\r\n            });\r\n        });\r\n       \r\n    }\r\n    \r\n    render(){\r\n        const columns = [{\r\n            title: '日志编号',\r\n            dataIndex: 'id',\r\n            key: 'id'\r\n          },{\r\n            title: '日志信息',\r\n            dataIndex: 'job_log',\r\n            key: 'job_log',\r\n          }];\r\n        return (\r\n            <div id=\"page-wrapper\">\r\n            <div style={{marginLeft: '350px'}}>\r\n                    <Circle\r\n                        progress={this.state.score}\r\n                        size=\"160\" // String: Defines the size of the circle.\r\n                        lineWidth=\"25\" // String: Defines the thickness of the circle's stroke.\r\n                    />\r\n                </div>\r\n                <Card title=\"日志列表\">\r\n                     <div>Seconds:{this.state.seconds}</div>\r\n                    <Table dataSource={this.state.list} columns={columns}  pagination={false}/>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default JobLog;"],"sourceRoot":""}