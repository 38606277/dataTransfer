{"version":3,"sources":["webpack:///./src/page/transfer/routerTransfer.jsx","webpack:///./src/util/HttpService.jsx","webpack:///./src/service/TransferService.jsx","webpack:///./src/page/transfer/TransferList.jsx","webpack:///./src/page/transfer/TransferInfo.jsx"],"names":["__webpack_require__","_reactRouterDom","RouterTransfer","React","Component","_react2","default","createElement","Switch","Route","path","component","TransferList","TransferInfo","Redirect","exact","from","to","_LogcalStorge","localStorge","LocalStorge","HttpService","window","getServerUrl","url","param","undefined","getStorage","location","href","Promise","resolve","reject","fullUrl","getBaseUrl","opts","method","headers","Access-Control-Allow-Origin","credentials","JSON","stringify","body","fetch","then","response","json","catch","error","_HttpService","TransferService","listParam","post","Id","id","Param","transfer_id","_transfer","Search","_input2","props","_classCallCheck","this","_this","_possibleConstructorReturn","__proto__","Object","getPrototypeOf","call","state","list","pageNum","perPage","listType","searchKeyword","dictionaryList","pageNumd","searchDictionary","paramValue","totald","loadTransferList","_this2","keyword","getList","setState","data","resultRows","total","resultTotal","errMsg","_this3","e","name","target","value","trim","_defineProperty","_this4","_this5","confirm","delTransfer","alert","_this6","columns","title","dataIndex","key","render","text","record","index","Link","_divider2","type","onClick","deleteTransfer","_card2","_tooltip2","style","width","marginBottom","placeholder","enterButton","onSearch","_button2","float","marginRight","_table2","dataSource","pagination","_pagination2","current","showTotal","onChange","onPageNumChange","FormItem","_form2","Item","options","lineNumbers","mode","extraKeys","Ctrl","theme","confirmDirty","match","params","visible","selectTransferList","handleSubmit","bind","handleConfirmBlur","getTransferInfo","form","setFieldsValue","refs","editorsql","codeMirror","setValue","transfer_content","setSize","border","errorTips","preventDefault","validateFieldsAndScroll","err","values","getValue","save","getFieldDecorator","height","onSubmit","_row2","_col2","span","textAlign","label","_extends","labelCol","xs","sm","wrapperCol","rules","required","message","_reactCodemirror2","ref","offset","htmlType","marginLeft","create"],"mappings":"wYAAAA,EAAA,IACAC,EAAAD,EAAA,SAEAA,EAAA,UACAA,EAAA,6DAEME,grBAAuBC,UAAMC,+CAE3B,OACIC,EAAAC,QAAAC,cAACN,EAAAO,OAAD,KACKH,EAAAC,QAAAC,cAACN,EAAAQ,MAAD,CAAOC,KAAK,yBAAyBC,UAAWC,YAChDP,EAAAC,QAAAC,cAACN,EAAAQ,MAAD,CAAOC,KAAK,sCAAsCC,UAAWE,YAC7DR,EAAAC,QAAAC,cAACN,EAAAa,SAAD,CAAUC,OAAA,EAAMC,KAAK,YAAYC,GAAG,+CAKtCf,+VCjBfF,EAAA,KACA,MAAAkB,EAAAlB,EAAA,KACA,IAAMmB,EAAc,uCAAIC,QACHC,gNAKb,OADQC,OAAOC,4CAKPC,EAAIC,GACZ,GAAIC,MAAWP,EAAYQ,WAAW,aAAoB,gCAALH,GAA4C,iCAALA,GAA0C,IAAIL,EAAYQ,WAAW,aAAqB,gCAALH,GAA4C,iCAALA,EAEpN,OADAF,OAAOM,SAASC,KAAK,SACb,IAAIC,QAAQ,SAACC,EAASC,MAE9B,IAAMC,EAAUZ,EAAYa,aAAeV,EACvCW,EAAO,CACPC,OAAQ,OACRC,QAAS,CACLC,8BAA+B,IAC/BC,YAAaC,KAAKC,UAAUtB,EAAYQ,WAAW,aAAe,KAEtEe,KAAMjB,GAGV,OAAOkB,MAAMV,EAASE,GAAMS,KAAK,SAACC,GAE1B,OAAOA,EAASC,SACjBC,MAAM,SAACC,GACN,OAAOA,EAAMF,4BA5BZzB,gVCIrB4B,EAAAjD,EAAA,6CAEMkD,0KAEMC,GAEJ,OAAO9B,UAAY+B,KAAK,8BAA8BZ,KAAKC,UAAUU,4CAIzDE,GACZ,OAAOhC,UAAY+B,KAAK,+BAA+BZ,KAAKC,UAAU,CAACa,GAAGD,kCAGzEE,GACD,MAAsB,QAAnBA,EAAMC,YACEnC,UAAY+B,KAAK,8BAA8BZ,KAAKC,UAAUc,IAE9DlC,UAAY+B,KAAK,8BAA8BZ,KAAKC,UAAUc,wCAIjED,GACR,OAAOjC,UAAY+B,KAAK,8BAA8BZ,KAAKC,UAAU,CAACa,GAAGA,wBAKlEJ,8bCnCf,QAAAlD,EAAA,IACAC,EAAAD,EAAA,SACAA,EAAA,UACAA,EAAA,yDAGoB,MADpBA,EAAA,MACwBoB,SAAxB,IACMqC,EAAY,IAAIP,UAChBQ,EAASC,EAAArD,QAAMoD,OAEf9C,cACF,SAAAA,EAAYgD,gGAAMC,CAAAC,KAAAlD,GAAA,IAAAmD,mKAAAC,CAAAF,MAAAlD,EAAAqD,WAAAC,OAAAC,eAAAvD,IAAAwD,KAAAN,KACRF,IADQ,OAEdG,EAAKM,MAAQ,CACTC,KAAkB,GAClBC,QAAkB,EAClBC,QAAiB,GACjBC,SAAiB,OACjBC,cAAc,GACdC,eAAe,GACfC,SAAU,EACVC,iBAAiB,GACjBC,WAAW,GACXC,OAAO,GAZGhB,qUADK5D,UAAMC,0DAiBxB0D,KAAKkB,8DAEQ,IAAAC,EAAAnB,KACVX,EAAY,GAChBA,EAAUoB,QAAWT,KAAKO,MAAME,QAChCpB,EAAUqB,QAAWV,KAAKO,MAAMG,QAEL,WAAxBV,KAAKO,MAAMI,WACVtB,EAAU+B,QAAapB,KAAKO,MAAMK,eAEtCjB,EAAU0B,QAAQhC,GAAWP,KAAK,SAAAC,GAC9BoC,EAAKG,SAAS,CAACd,KAAKzB,EAASwC,KAAKC,WAAWC,MAAM1C,EAASwC,KAAKG,eAClE,SAAAC,GACCR,EAAKG,SAAS,CACVd,KAAO,+CAMHC,GAAQ,IAAAmB,EAAA5B,KACpBA,KAAKsB,SAAS,CACVb,QAAUA,GACX,WACCmB,EAAKV,2DAICW,GACV,IAAIC,EAAUD,EAAEE,OAAOD,KACnBE,EAAUH,EAAEE,OAAOC,MAAMC,OAC7BjC,KAAKsB,+HAALY,CAAA,GACKJ,EAAQE,qCAIPpB,GAAc,IAAAuB,EAAAnC,KAChBW,EAA6B,KAAlBC,EAAuB,OAAS,SAC/CZ,KAAKsB,SAAS,CACVX,SAASA,EACTF,QAAkB,EAClBG,cAAkBA,GACnB,WACCuB,EAAKjB,4DAGE1B,GAAG,IAAA4C,EAAApC,KACXqC,QAAQ,WACP1C,EAAU2C,YAAY9C,GAAIV,KAAK,SAAAC,GAC3BwD,MAAM,QACNH,EAAKlB,oBACN,SAAAS,GACCY,MAAM,2CAKV,IAAAC,EAAAxC,KAKEyC,GADazC,KAAKO,MAAMC,KACd,CAAC,CACbkC,MAAO,OACPC,UAAW,cACXC,IAAK,eACL,CACAF,MAAO,OACPC,UAAW,gBACXC,IAAK,gBACLC,OAAQ,SAASC,EAAMC,EAAQC,GAC5B,OAAOzG,EAAAC,QAAAC,cAACN,EAAA8G,KAAD,CAAM9F,GAAA,0BAA+B4F,EAAOrD,aAAiBoD,KAEvE,CACAJ,MAAO,KACPC,UAAW,KACXE,OAAQ,SAACC,EAAMC,GAAP,OACJxG,EAAAC,QAAAC,cAAA,YACEF,EAAAC,QAAAC,cAACN,EAAA8G,KAAD,CAAM9F,GAAA,0BAA+B4F,EAAOrD,aAA5C,MACAnD,EAAAC,QAAAC,cAAAyG,EAAA1G,QAAA,CAAS2G,KAAK,aACd5G,EAAAC,QAAAC,cAAA,KAAG2G,QAAS,kBAAIZ,EAAKa,eAAL,GAAuBN,EAAOrD,cAAgB3B,KAAK,gBAAnE,WAKV,OACIxB,EAAAC,QAAAC,cAAA,OAAK+C,GAAG,gBACRjD,EAAAC,QAAAC,cAAA6G,EAAA9G,QAAA,CAAMkG,MAAM,QACRnG,EAAAC,QAAAC,cAAA8G,EAAA/G,QAAA,KACKD,EAAAC,QAAAC,cAACmD,EAAD,CACG4D,MAAO,CAAEC,MAAO,IAAIC,aAAa,QACjCC,YAAY,SACZC,YAAY,KACZC,SAAU,SAAA7B,GAAA,OAASQ,EAAKqB,SAAS7B,OAGzCzF,EAAAC,QAAAC,cAAA8G,EAAA/G,QAAA,KACID,EAAAC,QAAAC,cAAAqH,EAAAtH,QAAA,CAAQuB,KAAK,+BAA+ByF,MAAO,CAAEO,MAAO,QAASC,YAAa,QAAUb,KAAK,WAAjG,SAGJ5G,EAAAC,QAAAC,cAAAwH,EAAAzH,QAAA,CAAO0H,WAAYlE,KAAKO,MAAMC,KAAMiC,QAASA,EAAU0B,YAAY,IACnE5H,EAAAC,QAAAC,cAAC2H,EAAA5H,QAAD,CAAY6H,QAASrE,KAAKO,MAAME,QACxBgB,MAAOzB,KAAKO,MAAMkB,MAAQ6C,UAAW,SAAA7C,GAAA,WAAce,EAAKjC,MAAMkB,MAAzB,KACrC8C,SAAU,SAAC9D,GAAD,OAAa+B,EAAKgC,gBAAgB/D,2BAQrD3D,gmBC1If,QAAAZ,EAAA,QAEAA,EAAA,UACAA,EAAA,WACAA,EAAA,QACAA,EAAA,kLACAA,EAAA,KAEAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACA,IAAMyD,EAAY,IAAIP,UAChB/B,EAAc,IAAIC,UAClBmH,EAAWC,EAAAlI,QAAKmI,KAChBC,EAAU,CACdC,aAAa,EACbC,KAAM,CAAEhD,KAAM,YACdiD,UAAW,CAAEC,KAAQ,gBACrBC,MAAO,WAGHlI,cACJ,SAAAA,EAAY+C,gGAAOC,CAAAC,KAAAjD,GAAA,IAAAkD,mKAAAC,CAAAF,MAAAjD,EAAAoD,WAAAC,OAAAC,eAAAtD,IAAAuD,KAAAN,KACXF,IADW,OAEjBG,EAAKM,MAAQ,CACX2E,cAAc,EACdxF,YAAaO,EAAKH,MAAMqF,MAAMC,OAAO1F,YACrC2F,SAAQ,EACRC,mBAAmB,IAErBrF,EAAKsF,aAAetF,EAAKsF,aAAaC,KAAlBvF,GACpBA,EAAKwF,kBAAoBxF,EAAKwF,kBAAkBD,KAAvBvF,GATRA,qUADM5D,UAAMC,0DAcX,IAAA6E,EAAAnB,KACZ,MAAMA,KAAKO,MAAMb,aAAe,IAAIM,KAAKO,MAAMb,aAAgB,QAAQM,KAAKO,MAAMb,aACpFC,EAAU+F,gBAAgB1F,KAAKO,MAAMb,aAAaZ,KAAK,SAAAC,GAC/CoC,EAAKrB,MAAM6F,KAAKC,eAAe7G,EAASwC,MACxCJ,EAAK0E,KAAKC,UAAUC,WAAWC,SAASjH,EAASwC,KAAK0E,kBACtD,IAAIH,EAAY3E,EAAK0E,KAAKC,UAC1BA,EAAUC,WAAWG,QAAQ,OAAQ,SACrCJ,EAAUC,WAAWI,OAAS,cAC/B,SAAAxE,GACCR,EAAKG,SAAS,IACdjE,EAAY+I,UAAUzE,2CAMtBE,GACZ,IAAIC,EAAOD,EAAEE,OAAOD,KAClBE,EAAQH,EAAEE,OAAOC,MAAMC,OAEzBjC,KAAKF,MAAM6F,KAAKC,eAAhB1D,EAAA,GAAkCJ,EAAOE,6CAI3BH,GACd,IAAIC,EAAOD,EAAEE,OAAOD,KACpBE,EAAQH,EAAEE,OAAOC,MAAMC,OACvBjC,KAAKsB,SAALY,EAAA,GAAgBJ,EAAME,2CAGTF,EAAKE,GAClBhC,KAAKsB,SAALY,EAAA,GAAgBJ,EAAME,IACtBhC,KAAKF,MAAM6F,KAAKC,eAAhB1D,EAAA,GAAiCJ,EAAME,yCAG5BH,GAAG,IAAAD,EAAA5B,KACd6B,EAAEwE,iBACFrG,KAAKF,MAAM6F,KAAKW,wBAAwB,SAACC,EAAKC,GACvCD,IACHC,EAAO9G,YAAckC,EAAKrB,MAAMb,YAChC8G,EAAOP,iBAAmBrE,EAAKiE,KAAKC,UAAUC,WAAWU,WACzD9G,EAAU+G,KAAKF,GAAQ1H,KAAK,SAAAC,GAC1BwD,MAAM,QACN/E,OAAOM,SAASC,KAAO,cACtB,SAAA4D,GACDC,EAAKN,SAAS,IACdjE,EAAY+I,UAAUzE,kDAMZE,GAChB,IAAMG,EAAQH,EAAEE,OAAOC,MACvBhC,KAAKsB,SAAS,CAAE4D,aAAclF,KAAKO,MAAM2E,gBAAkBlD,qCAGpD,IACC2E,EAAsB3G,KAAKF,MAAM6F,KAAjCgB,kBAiCR,OACEpK,EAAAC,QAAAC,cAAA,OAAK+C,GAAG,eAAegE,MAAO,CAAEoD,OAAQ,OAAQnD,MAAO,OAAQ0C,OAAQ,QACrE5J,EAAAC,QAAAC,cAAA6G,EAAA9G,QAAA,CAAMkG,MAAiC,QAA1B1C,KAAKO,MAAMb,YAAwB,OAAS,QACvDnD,EAAAC,QAAAC,cAAAiI,EAAAlI,QAAA,CAAMqK,SAAU7G,KAAKuF,cACnBhJ,EAAAC,QAAAC,cAAAqK,EAAAtK,QAAA,KACAD,EAAAC,QAAAC,cAAAsK,EAAAvK,QAAA,CAAKwK,KAAM,EAAGxD,MAAO,CAACyD,UAAU,UAC9B1K,EAAAC,QAAAC,cAACgI,EAAD,CAAUyC,MAAM,UAGhB3K,EAAAC,QAAAC,cAAAsK,EAAAvK,QAAA,CAAKwK,KAAM,IACTzK,EAAAC,QAAAC,cAACgI,EAAD0C,EAAA,GA1CW,CACrBC,SAAU,CACRC,GAAI,CAAEL,KAAM,IACZM,GAAI,CAAEN,KAAM,IAEdO,WAAY,CACVF,GAAI,CAAEL,KAAM,IACZM,GAAI,CAAEN,KAAM,MAmCJ,CAA8BE,MAAM,KACjCP,EAAkB,gBAAiB,CAClCa,MAAO,CAAC,CAAEC,UAAU,EAAMC,QAAS,cADpCf,CAGCpK,EAAAC,QAAAC,cAAAoD,EAAArD,QAAA,CAAO2G,KAAK,OAAOrB,KAAK,sBAMhCvF,EAAAC,QAAAC,cAAAqK,EAAAtK,QAAA,KACED,EAAAC,QAAAC,cAAAsK,EAAAvK,QAAA,CAAKwK,KAAM,EAAGxD,MAAO,CAACyD,UAAU,UAChC1K,EAAAC,QAAAC,cAACgI,EAAD,CAAUyC,MAAM,UAGhB3K,EAAAC,QAAAC,cAAAsK,EAAAvK,QAAA,CAAKwK,KAAM,IACTzK,EAAAC,QAAAC,cAACkL,EAAAnL,QAAD,CAAYoL,IAAI,YAAY5F,MAAM,GAAGwB,MAAO,CAAEoD,OAAQ,OAAQnD,MAAO,OAAQ0C,OAAQ,OAASvB,QAASA,MAM3GrI,EAAAC,QAAAC,cAACgI,EA5CiB,CACxB8C,WAAY,CACVF,GAAI,CACFL,KAAM,GACNa,OAAQ,GAEVP,GAAI,CACFN,KAAM,GACNa,OAAQ,KAqCJtL,EAAAC,QAAAC,cAAAqH,EAAAtH,QAAA,CAAQ2G,KAAK,UAAU2E,SAAS,SAAStE,MAAO,CAAEuE,WAAY,SAA9D,MACAxL,EAAAC,QAAAC,cAAAqH,EAAAtH,QAAA,CAAQuB,KAAK,aAAaoF,KAAK,UAAUK,MAAO,CAAEuE,WAAY,SAA9D,6BAQCrD,EAAAlI,QAAKwL,QAALtD,CAAc3H","file":"8.js","sourcesContent":["import React            from 'react';\r\nimport { HashRouter as Router, Switch, Redirect, Route, Link } from 'react-router-dom'\r\n// 页面\r\nimport TransferList from './TransferList.jsx';\r\nimport TransferInfo from './TransferInfo.jsx';\r\n\r\nclass RouterTransfer extends React.Component{\r\n    render(){\r\n        return (\r\n            <Switch>\r\n                 <Route path=\"/Transfer/TransferList\" component={TransferList} />\r\n                 <Route path=\"/Transfer/TransferInfo/:transfer_id\" component={TransferInfo} />\r\n                 <Redirect exact from=\"/Transfer\" to=\"/Transfer/TransferList\"/> \r\n            </Switch>\r\n        )\r\n    }\r\n}\r\nexport default RouterTransfer;","import 'whatwg-fetch';\r\nimport  LocalStorge  from './LogcalStorge.jsx';\r\nconst localStorge = new LocalStorge();\r\nexport default class HttpService {\r\n    \r\n    static getBaseUrl(){\r\n\r\n        var url=window.getServerUrl();//\"http://localhost:8080/\";\r\n        return url;\r\n    }\r\n    \r\n    //\r\n    static post(url,param){\r\n        if((undefined==localStorge.getStorage('userInfo') && url!='/reportServer/user/encodePwd' && url!='/reportServer/user/Reactlogin') || (''==localStorge.getStorage('userInfo')  && url!='/reportServer/user/encodePwd' && url!='/reportServer/user/Reactlogin')){\r\n            window.location.href='#login';\r\n            return  new Promise((resolve, reject) => {});\r\n        }else{\r\n            const fullUrl = HttpService.getBaseUrl() + url;\r\n            let opts = {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Access-Control-Allow-Origin': '*',\r\n                    credentials: JSON.stringify(localStorge.getStorage('userInfo') || '')\r\n                },\r\n                body: param\r\n            };\r\n\r\n            return fetch(fullUrl, opts).then((response) => {\r\n                    //console.log(response.json())\r\n                    return response.json();\r\n                }).catch((error)=>{\r\n                    return error.json();\r\n                });\r\n        }\r\n    }\r\n\r\n    get(){\r\n\r\n    }\r\n\r\n          \r\n    }\r\n","/*\r\n* @Author: Rosen\r\n* @Date:   2018-01-31 13:19:15\r\n* @Last Modified by:   Rosen\r\n* @Last Modified time: 2018-02-04 22:52:34\r\n*/\r\n\r\nimport   HttpService  from '../util/HttpService.jsx';\r\n\r\nclass TransferService{\r\n    // 获取任务列表\r\n    getList(listParam){\r\n      \r\n        return HttpService.post('transfer/sql/getAllTransfer',JSON.stringify(listParam));\r\n    }\r\n    \r\n    // 获取任务详情\r\n    getTransferInfo(Id){\r\n        return HttpService.post('transfer/sql/getTransferById',JSON.stringify({id:Id}));\r\n    }\r\n     // 保存\r\n    save(Param){\r\n        if(Param.transfer_id=='null'){\r\n            return HttpService.post('transfer/sql/createTransfer',JSON.stringify(Param));\r\n        }else{\r\n            return HttpService.post('transfer/sql/updateTransfer',JSON.stringify(Param));\r\n        }\r\n    }\r\n    //删除一个job\r\n    delTransfer(id){\r\n        return HttpService.post('transfer/sql/deleteTransfer',JSON.stringify({id:id}));\r\n    }\r\n    \r\n}\r\n\r\nexport default TransferService;","import React        from 'react';\r\nimport { Link }             from 'react-router-dom';\r\nimport TransferService                 from '../../service/TransferService.jsx';\r\nimport Pagination           from 'antd/lib/pagination';\r\nimport {Table,Divider,Button,Card, Tooltip,Input,Modal}  from 'antd';\r\nimport  LocalStorge         from '../../util/LogcalStorge.jsx';\r\nconst localStorge = new LocalStorge();\r\nconst _transfer = new TransferService();\r\nconst Search = Input.Search;\r\n\r\nclass TransferList extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            list            : [],\r\n            pageNum         : 1,\r\n            perPage        : 10,\r\n            listType        :'list',\r\n            searchKeyword:'',\r\n            dictionaryList:[],\r\n            pageNumd :1,\r\n            searchDictionary:\"\",\r\n            paramValue:\"\",\r\n            totald:0,\r\n        };\r\n    }\r\n    componentDidMount(){\r\n         this.loadTransferList();\r\n    }\r\n    loadTransferList(){\r\n        let listParam = {};\r\n        listParam.pageNum  = this.state.pageNum;\r\n        listParam.perPage  = this.state.perPage;\r\n        // 如果是搜索的话，需要传入搜索类型和搜索关键字\r\n        if(this.state.listType === 'search'){\r\n            listParam.keyword    = this.state.searchKeyword;\r\n        }\r\n        _transfer.getList(listParam).then(response => {\r\n            this.setState({list:response.data.resultRows,total:response.data.resultTotal});\r\n        }, errMsg => {\r\n            this.setState({\r\n                list : []\r\n            });\r\n            // _mm.errorTips(errMsg);\r\n        });\r\n    }\r\n    // 页数发生变化的时候\r\n    onPageNumChange(pageNum){\r\n        this.setState({\r\n            pageNum : pageNum\r\n        }, () => {\r\n            this.loadTransferList();\r\n        });\r\n    }\r\n    // 数据变化的时候\r\n    onValueChange(e){\r\n        let name    = e.target.name,\r\n            value   = e.target.value.trim();\r\n        this.setState({\r\n            [name] : value\r\n        });\r\n    }\r\n     // 搜索\r\n     onSearch(searchKeyword){\r\n        let listType = searchKeyword === '' ? 'list' : 'search';\r\n        this.setState({\r\n            listType:listType,\r\n            pageNum         : 1,\r\n            searchKeyword   : searchKeyword\r\n        }, () => {\r\n            this.loadTransferList();\r\n        });\r\n    }\r\n    deleteTransfer(id){\r\n        if(confirm('确认删除吗？')){\r\n            _transfer.delTransfer(id).then(response => {\r\n                alert(\"删除成功\");\r\n                this.loadTransferList();\r\n            }, errMsg => {\r\n                alert(\"删除失败\");\r\n            });\r\n        }\r\n    }\r\n   \r\n    render(){\r\n        // this.state.list.map((item,index)=>{\r\n        //     item.key=index;\r\n        // })\r\n        const dataSource = this.state.list;\r\n        const columns = [{\r\n            title: '脚本编号',\r\n            dataIndex: 'transfer_id',\r\n            key: 'transfer_id'\r\n          },{\r\n            title: '脚本名称',\r\n            dataIndex: 'transfer_name',\r\n            key: 'transfer_name',\r\n            render: function(text, record, index) {\r\n               return <Link to={ `/Transfer/TransferInfo/${record.transfer_id}` }>{text}</Link>;\r\n             } \r\n          },{\r\n            title: '操作',\r\n            dataIndex: '操作',\r\n            render: (text, record) => (\r\n                <span>\r\n                  <Link to={ `/Transfer/TransferInfo/${record.transfer_id}` }>编辑</Link>\r\n                  <Divider type=\"vertical\" />\r\n                  <a onClick={()=>this.deleteTransfer(`${record.transfer_id}`)} href=\"javascript:;\">删除</a>\r\n                </span>\r\n              ),\r\n          }];\r\n         \r\n        return (\r\n            <div id=\"page-wrapper\">\r\n            <Card title=\"脚本列表\">\r\n                <Tooltip>\r\n                     <Search\r\n                        style={{ width: 300,marginBottom:'10px' }}\r\n                        placeholder=\"请输入...\"\r\n                        enterButton=\"查询\"\r\n                        onSearch={value => this.onSearch(value)}\r\n                        />\r\n                </Tooltip>\r\n                <Tooltip>\r\n                    <Button href=\"#/Transfer/TransferInfo/null\" style={{ float: \"right\", marginRight: \"30px\" }} type=\"primary\">新建脚本</Button>\r\n                </Tooltip>\r\n                \r\n                <Table dataSource={this.state.list} columns={columns}  pagination={false}/>\r\n                <Pagination current={this.state.pageNum} \r\n                        total={this.state.total}  showTotal={total => `共 ${this.state.total}条`}\r\n                        onChange={(pageNum) => this.onPageNumChange(pageNum)}/> \r\n            </Card>\r\n            \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TransferList;","import React from 'react';\r\nimport { Form, Input, Select, Button, Card, Row, Col } from 'antd';\r\nimport LocalStorge from '../../util/LogcalStorge.jsx';\r\nimport TransferService from '../../service/TransferService.jsx';\r\nimport TextArea from 'antd/lib/input/TextArea';\r\nimport CodeMirror from 'react-codemirror';\r\nimport 'codemirror/lib/codemirror.css';\r\n//import 'codemirror/mode/sql/sql';\r\nimport 'codemirror/mode/xml/xml';\r\nimport 'codemirror/theme/ambiance.css';\r\nimport 'codemirror/addon/hint/xml-hint';\r\nconst _transfer = new TransferService();\r\nconst localStorge = new LocalStorge();\r\nconst FormItem = Form.Item;\r\nconst options = {\r\n  lineNumbers: true,                //显示行号  \r\n  mode: { name: \"text/xml\" },          //定义mode  \r\n  extraKeys: { \"Ctrl\": \"autocomplete\" },//自动提示配置  \r\n  theme: \"default\",\r\n};\r\n\r\nclass TransferInfo extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      confirmDirty: false,\r\n      transfer_id: this.props.match.params.transfer_id,\r\n      visible:false,\r\n      selectTransferList:[],\r\n    };\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleConfirmBlur = this.handleConfirmBlur.bind(this);\r\n  }\r\n\r\n  //初始化加载调用方法\r\n  componentDidMount() {\r\n       if(null!=this.state.transfer_id && ''!=this.state.transfer_id  && 'null'!=this.state.transfer_id){\r\n        _transfer.getTransferInfo(this.state.transfer_id).then(response => {\r\n                this.props.form.setFieldsValue(response.data);\r\n                this.refs.editorsql.codeMirror.setValue(response.data.transfer_content);\r\n                let editorsql = this.refs.editorsql;\r\n                editorsql.codeMirror.setSize('100%', '500px');\r\n                editorsql.codeMirror.border = \"solid  1px\";\r\n            }, errMsg => {\r\n                this.setState({});\r\n                localStorge.errorTips(errMsg);\r\n            });\r\n        }\r\n  }\r\n\r\n  //编辑字段对应值\r\n  onValueChange(e) {\r\n    let name = e.target.name,\r\n      value = e.target.value.trim();\r\n    //this.setState({[name]:value});  \r\n    this.props.form.setFieldsValue({ [name]: value });\r\n\r\n  }\r\n //编辑字段对应值\r\n onValueChangetwo(e) {\r\n    let name = e.target.name,\r\n    value = e.target.value.trim();\r\n    this.setState({[name]:value});\r\n  }\r\n  //编辑字段对应值\r\n  onSelectChange(name,value){\r\n    this.setState({[name]:value});  \r\n    this.props.form.setFieldsValue({[name]:value});\r\n  }\r\n  //提交\r\n  handleSubmit(e) {\r\n    e.preventDefault();\r\n    this.props.form.validateFieldsAndScroll((err, values) => {\r\n      if (!err) {\r\n        values.transfer_id = this.state.transfer_id;\r\n        values.transfer_content = this.refs.editorsql.codeMirror.getValue();\r\n        _transfer.save(values).then(response => {\r\n          alert(\"保存成功\");\r\n          window.location.href = \"#/Transfer\";\r\n        }, errMsg => {\r\n          this.setState({});\r\n          localStorge.errorTips(errMsg);\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  handleConfirmBlur(e) {\r\n    const value = e.target.value;\r\n    this.setState({ confirmDirty: this.state.confirmDirty || !!value });\r\n  }\r\n\r\n  render() {\r\n    const { getFieldDecorator } = this.props.form;\r\n    const formItemLayout = {\r\n      labelCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 8 },\r\n      },\r\n      wrapperCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 16 },\r\n      },\r\n    };\r\n    const tailFormItemLayout = {\r\n      labelCol: {\r\n        xs: { span: 4 },\r\n        sm: { span: 4 },\r\n      },\r\n      wrapperCol: {\r\n        xs: {span: 20},\r\n        sm: {pan: 20},\r\n      },\r\n    };\r\n    const BtnFormItemLayout = {\r\n      wrapperCol: {\r\n        xs: {\r\n          span: 24,\r\n          offset: 0,\r\n        },\r\n        sm: {\r\n          span: 16,\r\n          offset: 8,\r\n        },\r\n      },\r\n    };\r\n    return (\r\n      <div id=\"page-wrapper\" style={{ height: '100%', width: '100%', border: \"1px\" }} >\r\n        <Card title={this.state.transfer_id == 'null' ? '新建脚本' : '编辑脚本'}>\r\n          <Form onSubmit={this.handleSubmit}>\r\n            <Row>\r\n            <Col span={2} style={{textAlign:'right'}}>\r\n              <FormItem label=\"脚本名称\"></FormItem>\r\n                \r\n              </Col>\r\n              <Col span={12}>\r\n                <FormItem {...formItemLayout} label=\"\">\r\n                  {getFieldDecorator('transfer_name', {\r\n                    rules: [{ required: true, message: '请输入脚本名称!' }],\r\n                  })(\r\n                    <Input type='text' name='transfer_name' />\r\n                  )}\r\n                </FormItem>\r\n              </Col>\r\n             \r\n            </Row>\r\n            <Row>\r\n              <Col span={2} style={{textAlign:'right'}}>\r\n              <FormItem label=\"脚本内容\"></FormItem>\r\n                \r\n              </Col>\r\n              <Col span={22}>\r\n                <CodeMirror ref=\"editorsql\" value='' style={{ height: '100%', width: '100%', border: \"1px\" }} options={options} />\r\n\r\n                </Col>\r\n            </Row>\r\n           \r\n\r\n            <FormItem {...BtnFormItemLayout}>\r\n              <Button type=\"primary\" htmlType=\"submit\" style={{ marginLeft: '30px' }}>保存</Button>\r\n              <Button href=\"#/Transfer\" type=\"primary\" style={{ marginLeft: '30px' }}>返回</Button>\r\n            </FormItem>\r\n          </Form>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Form.create()(TransferInfo);\r\n"],"sourceRoot":""}